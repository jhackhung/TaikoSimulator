Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/21/24 01:42:54
main_game_page.asm					     Page 1 - 1


				.model flat, c
				include csfml.inc
			      C ; CSFML.INC - SFML Definitions for x86 Assembly
			      C ; 使用 MASM 語法
			      C 
			      C includelib csfml-audio.lib
			      C includelib csfml-graphics.lib
			      C includelib csfml-system.lib
			      C includelib csfml-window.lib
			      C 
			      C ; sfBool 定義
 = 00000000		      C sfFalse     equ 0
 = 00000001		      C sfTrue      equ 1
			      C 
			      C ; sfEventType 定義
 = 00000000		      C sfEvtClosed               equ 0
 = 00000001		      C sfEvtResized              equ 1
 = 00000002		      C sfEvtLostFocus            equ 2
 = 00000003		      C sfEvtGainedFocus          equ 3
 = 00000004		      C sfEvtTextEntered          equ 4
 = 00000005		      C sfEvtKeyPressed           equ 5
 = 00000006		      C sfEvtKeyReleased          equ 6
 = 00000007		      C sfEvtMouseWheelMoved      equ 7
 = 00000008		      C sfEvtMouseWheelScrolled   equ 8
 = 00000009		      C sfEvtMouseButtonPressed   equ 9
 = 0000000A		      C sfEvtMouseButtonReleased  equ 10
 = 0000000B		      C sfEvtMouseMoved           equ 11
 = 0000000C		      C sfEvtMouseEntered         equ 12
 = 0000000D		      C sfEvtMouseLeft            equ 13
			      C 
			      C ; sfMouseButton 定義
 = 00000000		      C sfMouseLeft   equ 0
 = 00000001		      C sfMouseRight  equ 1
 = 00000002		      C sfMouseMiddle equ 2
			      C 
			      C ; sfKey 定義
 = 0000003A		      C sfKeyEnter    equ 58
 = 00000000		      C sfKeyA        equ 0
 = 00000012		      C sfKeyS        equ 18
 = 00000003		      C sfKeyD        equ 3
 = 00000024		      C sfKeyEscape   equ 36
			      C 
			      C ; 視窗風格定義
 = 00000000		      C sfNone       equ 0
 = 00000001		      C sfTitlebar   equ 1
 = 00000002		      C sfResize     equ 2
 = 00000004		      C sfClose      equ 4
 = 00000008		      C sfFullscreen equ 8
			      C 
			      C ; 結構體定義
 00000008		      C sfVector2f STRUCT
 00000000  00000000	      C     x REAL4 ?
 00000004  00000000	      C     y REAL4 ?
			      C sfVector2f ENDS
			      C 
 00000008		      C sfVector2i STRUCT
 00000000  00000000	      C     x SDWORD ?
 00000004  00000000	      C     y SDWORD ?
			      C sfVector2i ENDS
			      C 
 0000000C		      C sfVideoMode STRUCT
 00000000  00000000	      C     _width  DWORD ?
 00000004  00000000	      C     height DWORD ?
 00000008  00000000	      C     bpp    DWORD ?
			      C sfVideoMode ENDS
			      C 
 00000004		      C sfColor STRUCT
 00000000  00		      C     r BYTE ?
 00000001  00		      C     g BYTE ?
 00000002  00		      C     b BYTE ?
 00000003  00		      C     a BYTE ?
			      C sfColor ENDS
			      C 
 00000010		      C sfFloatRect STRUCT
 00000000  00000000	      C     left   REAL4 ?
 00000004  00000000	      C     top    REAL4 ?
 00000008  00000000	      C     _width  REAL4 ?
 0000000C  00000000	      C     height REAL4 ?
			      C sfFloatRect ENDS
			      C 
 0000000C		      C mouseButton STRUCT
 00000000  00000000	      C     button DWORD ?
 00000004  00000000	      C     x DWORD ?
 00000008  00000000	      C     y DWORD ?
			      C mouseButton ENDS
			      C 
 00000014		      C key STRUCT
 00000000  00000000	      C     code DWORD ?
 00000004  00000000	      C     alt DWORD ?
 00000008  00000000	      C     control DWORD ?
 0000000C  00000000	      C     shift DWORD ?
 00000010  00000000	      C     system DWORD ?
			      C key ENDS
			      C 
 00000030		      C sfEvent STRUCT
 00000000  00000000	      C     _type DWORD ?                
 00000004  00000000	      C     _size DWORD ?                
 00000008  00000000	      C     mouse mouseButton <>       
	   00000000
	   00000000
 00000014  00000000	      C     _key key <>                 
	   00000000
	   00000000
	   00000000
	   00000000
 00000028  00000000	      C     mouseMove sfVector2i <>     
	   00000000
			      C sfEvent ENDS
			      C 
 00000004		      C sfTime STRUCT
 00000000  00000000	      C     microseconds DWORD ?    
			      C sfTime ENDS
			      C 
			      C ; 函數原型 - 視窗相關
			      C EXTERN sfRenderWindow_create:PROC
			      C EXTERN sfRenderWindow_destroy:PROC
			      C EXTERN sfRenderWindow_close:PROC
			      C EXTERN sfRenderWindow_isOpen:PROC
			      C EXTERN sfRenderWindow_clear:PROC
			      C EXTERN sfRenderWindow_display:PROC
			      C EXTERN sfRenderWindow_pollEvent:PROC
			      C EXTERN sfRenderWindow_drawSprite:PROC
			      C EXTERN sfRenderWindow_drawText:PROC
			      C 
			      C ; 函數原型 - 紋理相關
			      C EXTERN sfTexture_createFromFile:PROC
			      C EXTERN sfTexture_destroy:PROC
			      C 
			      C ; 函數原型 - 精靈相關
			      C EXTERN sfSprite_create:PROC
			      C EXTERN sfSprite_destroy:PROC
			      C EXTERN sfSprite_setTexture:PROC
			      C EXTERN sfSprite_setPosition:PROC
			      C EXTERN sfSprite_setOrigin:PROC
			      C EXTERN sfSprite_move:PROC
			      C EXTERN sfSprite_getPosition:PROC
			      C 
			      C ; 函數原型 - 音樂相關
			      C EXTERN sfMusic_createFromFile:PROC
			      C EXTERN sfMusic_destroy:PROC
			      C EXTERN sfMusic_play:PROC
			      C EXTERN sfMusic_setLoop:PROC
			      C EXTERN sfMusic_stop: PROC
			      C EXTERN sfMusic_getStatus: PROC
			      C 
			      C ; 函數原型 - 文字相關
			      C EXTERN sfFont_createFromFile:PROC
			      C EXTERN sfFont_destroy:PROC
			      C EXTERN sfText_create:PROC
			      C EXTERN sfText_destroy:PROC
			      C EXTERN sfText_setFont:PROC
			      C EXTERN sfText_setString:PROC
			      C EXTERN sfText_setCharacterSize:PROC
			      C EXTERN sfText_setFillColor:PROC
			      C EXTERN sfText_setOutlineColor:PROC
			      C EXTERN sfText_setOutlineThickness:PROC
			      C EXTERN sfText_getLocalBounds:PROC
			      C EXTERN sfText_getGlobalBounds:PROC
			      C EXTERN sfText_setPosition:PROC
			      C 
			      C ; 函數原型 - 顏色相關
			      C EXTERN sfColor_fromRGB:PROC
			      C EXTERN sfColor_fromRGBA:PROC
			      C 
			      C ; 函數原型 - 矩形相關
			      C EXTERN sfRectangleShape_create: PROC
			      C EXTERN sfRectangleShape_setPosition: PROC
			      C EXTERN sfRectangleShape_setSize: PROC
			      C EXTERN sfRectangleShape_setFillColor: PROC
			      C EXTERN sfRectangleShape_setOutlineThickness: PROC
			      C EXTERN sfRenderWindow_drawRectangleShape: PROC
			      C EXTERN sfRectangleShape_destroy: PROC
			      C EXTERN sfRectangleShape_setOutlineColor: PROC
			      C 
			      C EXTERN sfSleep: PROC
			      C 
			      C EXTERN sfClock_create:PROC
			      C EXTERN sfClock_getElapsedTime:PROC
			      C EXTERN sfClock_restart:PROC
			      C EXTERN sfClock_destroy:PROC
			      C 
				include windows.inc
			      C ; windows.inc - 包含 Windows API 函數的定義
			      C 
			      C includelib kernel32.lib
			      C 
			      C extern GetStdHandle@4:PROC
			      C extern CreateFileA@28:PROC
			      C extern WriteFile@20:PROC
			      C extern ReadFile@20:PROC
			      C extern ExitProcess@4:PROC
			      C extern CloseHandle@4:PROC
			      C extern WriteConsoleA@20:PROC
			      C extern GetLastError@0:PROC
			      C 
			      C ; 定義常量
 = 0x80000000		      C GENERIC_READ         EQU 0x80000000
 = 0x00000001		      C FILE_SHARE_READ      EQU 0x00000001
 =-0000000B		      C STD_OUTPUT_HANDLE equ -11
 = 00000003		      C OPEN_EXISTING        EQU 3
 = 0x00000080		      C FILE_ATTRIBUTE_NORMAL EQU 0x00000080
			      C 
			      C 
			      C 
				;include stdio.h

				extern currentPage: DWORD
				extern create_button: PROC
				EXTERN end_game_page:PROC
				;EXTERN fopen: PROC

 = 80000000h			GENERIC_READ equ 80000000h
 = 80h				FILE_ATTRIBUTE_NORMAL equ 80h
 =-0000000B			STD_OUTPUT_HANDLE equ -11

				; Drum 結構
 00000008			Drum STRUCT
 00000000  00000000		    sprite dd 0
 00000004  00000000		    dtype dd 0      ; 1 = 紅色鼓, 2 = 藍色鼓
				Drum ENDS

 00000000			.data
				    ; 檔案路徑
 00000000 61 73 73 65 74	    bg_path db "assets/main/game_background.jpg", 0
	   73 2F 6D 61 69
	   6E 2F 67 61 6D
	   65 5F 62 61 63
	   6B 67 72 6F 75
	   6E 64 2E 6A 70
	   67 00
 00000020 61 73 73 65 74	    red_drum_path db "assets/main/red_note.png", 0
	   73 2F 6D 61 69
	   6E 2F 72 65 64
	   5F 6E 6F 74 65
	   2E 70 6E 67 00
 00000039 61 73 73 65 74	    blue_drum_path db "assets/main/blue_note.png", 0
	   73 2F 6D 61 69
	   6E 2F 62 6C 75
	   65 5F 6E 6F 74
	   65 2E 70 6E 67
	   00
 00000053 61 73 73 65 74	    selected_music_path db "assets/never-gonna-give-you-up-official-music-video.mp3", 0
	   73 2F 6E 65 76
	   65 72 2D 67 6F
	   6E 6E 61 2D 67
	   69 76 65 2D 79
	   6F 75 2D 75 70
	   2D 6F 66 66 69
	   63 69 61 6C 2D
	   6D 75 73 69 63
	   2D 76 69 64 65
	   6F 2E 6D 70 33
	   00
 0000008B 61 73 73 65 74	    selected_beatmap_path db "assets/music/song1_beatmap.tja", 0
	   73 2F 6D 75 73
	   69 63 2F 73 6F
	   6E 67 31 5F 62
	   65 61 74 6D 61
	   70 2E 74 6A 61
	   00

 000000AA 31 30 30 31 32	    beatmapString db "1001201000102010,1001202000002222,1001201000102000,0000000000112212,1001201110102010,1001201110202222,1001201110102010,1020200022112212,1010211010102000,1011211010202000,1011202010100010,3000404000000000,1010211010102000,1011211010202000", 0
	   30 31 30 30 30
	   31 30 32 30 31
	   30 2C 31 30 30
	   31 32 30 32 30
	   30 30 30 30 32
	   32 32 32 2C 31
	   30 30 31 32 30
	   31 30 30 30 31
	   30 32 30 30 30
	   2C 30 30 30 30
	   30 30 30 30 30
	   30 31 31 32 32
	   31 32 2C 31 30
	   30 31 32 30 31
	   31 31 30 31 30
	   32 30 31 30 2C
	   31 30 30 31 32
	   30 31 31 31 30
	   32 30 32 32 32
	   32 2C 31 30 30
	   31 32 30 31 31
	   31 30 31 30 32
	   30 31 30 2C 31
	   30 32 30 32 30
	   30 30 32 32 31
	   31 32 32 31 32
	   2C 31 30 31 30
	   32 31 31 30 31
	   30 31 30 32 30
	   30 30 2C 31 30
	   31 31 32 31 31
	   30 31 30 32 30
	   32 30 30 30 2C
	   31 30 31 31 32
	   30 32 30 31 30
	   31 30 30 30 31
	   30 2C 33 30 30
	   30 34 30 34 30
	   30 30 30 30 30
	   30 30 30 2C 31
	   30 31 30 32 31
	   31 30 31 30 31
	   30 32 30 30 30
	   2C 31 30 31 31
	   32 31 31 30 31
	   30 32 30 32 30
	   30 30 00

				    ;常數
 = 00000064			    MAX_DRUMS equ 100 
 = 00000008			    Drum_struct_size equ 8     ; Drum 結構大小
 = 00002710			    MAX_NOTES equ 10000
 = 000003E8			    MAX_LINE_LENGTH equ 1000
 = 1280.0			    SCREEN_WIDTH equ 1280.0
 = 000002D0			    SCREEN_HEIGHT equ 720
 00000198 3F000000		    DRUM_SPEED dd 0.5
 0000019C 42C80000		    track_height REAL4 100.0
 000001A0 44A00000		    track_width REAL4 1280.0
 000001A4 44200000		    track_x REAL4 640.0
 000001A8 43480000		    track_y REAL4 200.0
 000001AC 00000000		    spritePosX    dd 0.0
 000001B0 00000000		    spritePosY    dd 0.0
 000001B4 476A6000		    const_60000 dd 60000.0
 000001B8 40800000		    four dd 4.0

				    ;用來存great good miss 的次數和最後總分
 000001BC 00000000		    great_count DWORD 0
 000001C0 00000000		    good_count DWORD 0
 000001C4 00000000		    miss_count DWORD 0
 000001C8 00000000		    score DWORD 0

				    ; CSFML 物件
 000001CC 00000000		    bgTexture dd 0
 000001D0 00000000		    bgSprite dd 0
 000001D4 00000000		    redDrumTexture dd 0
 000001D8 00000000		    blueDrumTexture dd 0
 000001DC  00000320 [		    drumQueue dd MAX_DRUMS * Drum_struct_size DUP(0)
	    00000000
	   ]
 00000E5C 00000000		    bgmusic dd 0
 00000E60 00000000		    trackBounds sfFloatRect <>
	   00000000
	   00000000
	   00000000
 00000E70 00000000		    current_drum Drum <>
	   00000000

				    ;Queue 相關
 00000E78 00000000		    front dd 0
 00000E7C 00000000		    rear dd 0
 00000E80 00000000		    qsize dd 0
 00000E84 00000000		    index dd 0

				    ; 時間相關
 00000E88 00000000		    clock dd 0
 00000E8C 00000000		    note_timer REAL4 0.0       ; 音符生成計時器

				    ;譜面相關
 00000E90 42E34CCD		    bpm dd 113.65 ; 預設 BPM
 00000E94 00000000		    noteSpawnInterval dd 0.0  ; 音符生成間隔 (毫秒)
 00000E98  00002710 [		    notes dd MAX_NOTES DUP(0) ; 儲存音符數據
	    00000000
	   ]
 0000AAD8 00000000		    totalNotes dd 0
 0000AADC 00000000		    currentNoteIndex dd 0

				    ; 視窗設定
 0000AAE0 00000500		    window_videoMode sfVideoMode <1280, 720, 32>
	   000002D0
	   00000020
 0000AAEC 54 61 69 6B 6F	    windowTitle db "Taiko Simulator", 0
	   20 53 69 6D 75
	   6C 61 74 6F 72
	   00

				    ; 顏色常數
 0000AAFC FF FF FF FF		    whiteColor sfColor <255, 255, 255, 255> ; 白色
 0000AB00 00 00 00 FF		    blackColor sfColor <0, 0, 0, 255>       ; 黑色

 0000AB04 44A00000		    initialPosition sfVector2f <SCREEN_WIDTH, 200.0>  ; 音符的 X 和 Y 座標
	   43480000

				        ;讀檔相關
 0000AB0C 00000000		    stdout_handle dd 0

 0000AB10 73 6F 6E 67 31	    filename db "song1_beatmap.tja", 0
	   5F 62 65 61 74
	   6D 61 70 2E 74
	   6A 61 00
 0000AB22 00000000		    hFile dd 0
 0000AB26 00000000		    bytesRead dd 0
 0000AB2A  00000400 [		    readBuffer db 1024 dup(0)
	    00
	   ]

 0000AF2A 52 65 61 64 20	    msgReadFail db "Read file failed.", 13, 10, 0
	   66 69 6C 65 20
	   66 61 69 6C 65
	   64 2E 0D 0A 00

 0000AF3E 46 69 6C 65 20	    msgReadSuccess db "File content:", 13, 10, 0
	   63 6F 6E 74 65
	   6E 74 3A 0D 0A
	   00

 00000000			.code

				;播放音樂
 00000000			game_play_music PROC
 00000000  68 00000053 R	    push offset selected_music_path
 00000005  E8 00000000 E	    call sfMusic_createFromFile
 0000000A  83 C4 04		    add esp, 4 
 0000000D  A3 00000E5C R	    mov bgMusic, eax

 00000012  50			    push eax
 00000013  E8 00000000 E	    call sfMusic_play
 00000018  83 C4 04		    add esp, 4
 0000001B  C3			    ret
 0000001C			game_play_music ENDP

				; 讀取文件內容
 0000001C			readFile PROC
 0000001C  8B F4		    mov esi, esp

 0000001E  6A 00		    push 0
 00000020  68 0000AB26 R	    push offset bytesRead
 00000025  68 00000400		    push 1024
 0000002A  68 0000AB2A R	    push offset readBuffer
 0000002F  FF 35 0000AB22 R	    push [hFile]
 00000035  E8 00000000 E	    call ReadFile@20
 0000003A  83 C4 14		    add esp, 20

 0000003D  8B E6		    mov esp, esi
 0000003F  C3			    ret
 00000040			readFile ENDP

				; 載入背景
 00000040			@load_bg PROC

				    ; 創建背景紋理
 00000040  6A 00		    push 0
 00000042  68 00000000 R	    push offset bg_path
 00000047  E8 00000000 E	    call sfTexture_createFromFile
 0000004C  83 C4 08		    add esp, 8
 0000004F  A3 000001CC R	    mov bgTexture, eax

				    ; 創建背景精靈
 00000054  E8 00000000 E	    call sfSprite_create
 00000059  A3 000001D0 R	    mov DWORD PTR [bgSprite], eax

				    ; 設定紋理
 0000005E  6A 01		    push 1
 00000060  A1 000001CC R	    mov eax, DWORD PTR [bgTexture]
 00000065  50			    push eax
 00000066  8B 0D 000001D0 R	    mov ecx, DWORD PTR [bgSprite]
 0000006C  51			    push ecx
 0000006D  E8 00000000 E	    call sfSprite_setTexture
 00000072  83 C4 0C		    add esp, 12
 00000075  C3			    ret
 00000076			@load_bg ENDP

 00000076			parseNoteChart PROC
 00000076  8D 35 000000AA R	    lea esi, [beatmapString]
 0000007C  8D 3D 00000E98 R	    lea edi, [notes]
 00000082  33 C9		    xor ecx, ecx 

 00000084			parse_loop:
 00000084  8A 06		    mov al, [esi]
 00000086  3C 00		    cmp al, 0 
 00000088  74 13		    je parse_end

 0000008A  3C 30		    cmp al, '0'
 0000008C  72 0C		    jb next_char
 0000008E  3C 32		    cmp al, '2'
 00000090  77 08		    ja next_char

 00000092  2C 30		    sub al, '0'
 00000094  88 07		    mov [edi], al
 00000096  47			    inc edi 
 00000097  41			    inc ecx 
 00000098  EB 00		    jmp next_char

 0000009A			next_char:
 0000009A  46			    inc esi
 0000009B  EB E7		    jmp parse_loop

 0000009D			parse_end:
 0000009D  89 0D 0000AAD8 R	    mov [totalNotes], ecx
 000000A3  F3/ 0F 10 05		    movss xmm0, [const_60000]
	   000001B4 R
 000000AB  F3/ 0F 10 0D		    movss xmm1, [bpm]
	   00000E90 R
 000000B3  F3/ 0F 59 0D		    mulss xmm1, [four]
	   000001B8 R
 000000BB  F3/ 0F 5E C1		    divss xmm0, xmm1
 000000BF  F3/ 0F 11 05		    movss [noteSpawnInterval], xmm0
	   00000E94 R
 000000C7  C3			    ret
 000000C8			parseNoteChart ENDP

				; 載入紅鼓紋理
 000000C8			@load_red_texture PROC
 000000C8  6A 00		    push 0
 000000CA  68 00000020 R	    push offset red_drum_path
 000000CF  E8 00000000 E	    call sfTexture_createFromFile
 000000D4  83 C4 08		    add esp, 8
 000000D7  A3 000001D4 R	    mov redDrumTexture, eax
 000000DC  C3			    ret
 000000DD			@load_red_texture ENDP

				; 載入藍鼓紋理
 000000DD			@load_blue_texture PROC
 000000DD  6A 00		    push 0
 000000DF  68 00000039 R	    push offset blue_drum_path
 000000E4  E8 00000000 E	    call sfTexture_createFromFile
 000000E9  83 C4 08		    add esp, 8
 000000EC  A3 000001D8 R	    mov blueDrumTexture, eax
 000000F1  C3			    ret
 000000F2			@load_blue_texture ENDP

				;full會return 1
 000000F2			isQueueFull PROC
 000000F2  A1 00000E80 R	    mov eax, qsize
 000000F7  83 F8 64		    cmp eax, MAX_DRUMS
 000000FA  74 05		    je queue_full
 000000FC  B8 00000000		    mov eax, 0

 00000101			queue_full:
 00000101  B8 00000001		    mov eax, 1
 00000106  C3			    ret
 00000107			isQueueFull ENDP

				;empty會return 1
 00000107			isQueueEmpty PROC
 00000107  A1 00000E80 R	    mov eax, qsize
 0000010C  83 F8 00		    cmp eax, 0
 0000010F  74 05		    je queue_empty
 00000111  B8 00000000		    mov eax, 0

 00000116			queue_empty:
 00000116  B8 00000001		    mov eax, 1
 0000011B  C3			    ret
 0000011C			isQueueEmpty ENDP

 0000011C			enqueue PROC
 0000011C  E8 FFFFFFD1		    call isQueueFull
 00000121  83 F8 01		    cmp eax, 1
 00000124  74 44		    je end_enqueue
				    
 00000126  A1 00000E70 R	    mov eax, [current_drum.sprite]      ; sprite
 0000012B  8B 1D 00000E74 R	    mov ebx, [current_drum.dtype]       ; dtype
 00000131  8D 3D 000001DC R	    lea edi, drumQueue

				    ; 計算擺放位置
 00000137  A1 00000E7C R	    mov eax, [rear]        
 0000013C  BA 00000008		    mov edx, Drum_struct_size
 00000141  F7 E2		    mul edx                  
 00000143  03 F8		    add edi, eax 

				    ; 儲存drum資料
 00000145  89 07		    mov [edi], eax           ; sprite
 00000147  89 5F 04		    mov [edi + 4], ebx       ; dtype

				    ; 更新rear、size
 0000014A  FF 05 00000E7C R	    inc dword ptr [rear]
 00000150  A1 00000E7C R	    mov eax, [rear]
 00000155  33 D2		    xor edx, edx
 00000157  B9 00000064		    mov ecx, MAX_DRUMS
 0000015C  F7 F1		    div ecx
 0000015E  89 15 00000E7C R	    mov dword ptr [rear], edx
 00000164  FF 05 00000E80 R	    inc dword ptr [qsize]

 0000016A			end_enqueue:
 0000016A  C3			    ret
 0000016B			enqueue ENDP

 0000016B			dequeue PROC
 0000016B  E8 FFFFFF97		    call isQueueEmpty
 00000170  83 F8 01		    cmp eax, 1
 00000173  74 42		    je end_dequeue

				    ; 計算移除位置
 00000175  8D 3D 000001DC R	    lea edi, drumQueue
 0000017B  A1 00000E78 R	    mov eax, [front]
 00000180  BA 00000008		    mov edx, Drum_struct_size
 00000185  F7 E2		    mul edx
 00000187  03 F8		    add edi, eax

				    ; 讀取 drum
 00000189  8B 07		    mov eax, [edi]           ;sprite
 0000018B  8B 5F 04		    mov ebx, [edi + 4]       ;dtype

				    ;釋放資源
 0000018E  50			    push eax
 0000018F  E8 00000000 E	    call sfSprite_destroy
 00000194  83 C4 04		    add esp, 4

				    ; 更新front、size
 00000197  FF 05 00000E78 R	    inc dword ptr [front]
 0000019D  A1 00000E78 R	    mov eax, [front]
 000001A2  33 D2		    xor edx, edx
 000001A4  B9 00000064		    mov ecx, MAX_DRUMS
 000001A9  F7 F1		    div ecx
 000001AB  89 15 00000E78 R	    mov dword ptr [front], edx
 000001B1  FF 0D 00000E80 R	    dec dword ptr [qsize]

 000001B7			end_dequeue:
 000001B7  C3			    ret
 000001B8			dequeue ENDP

 000001B8			spawnDrum PROC             ;call前type要先load到eax
 000001B8  E8 FFFFFF35		    call isQueueFull
 000001BD  83 F8 01		    cmp eax, 1
 000001C0  74 3C		    je end_spawn

 000001C2  A3 00000E74 R	    mov dword ptr [current_drum.dtype], eax
 000001C7  E8 00000000 E	    call sfSprite_create
 000001CC  A3 00000E70 R	    mov DWORD PTR [current_drum.sprite], eax

 000001D1  83 3D 00000E74 R	    cmp dword ptr [current_drum.dtype], 1
	   01
 000001D8  74 05		    je spawnRed
 000001DA  E8 FFFFFEFE		    call @load_blue_texture

 000001DF			spawnRed:
 000001DF  E8 FFFFFEE4		    call @load_red_texture

				    ;設定位置
 000001E4  FF 35 0000AB08 R	    push dword ptr [initialPosition+4] ; Y 座標
 000001EA  FF 35 0000AB04 R	    push dword ptr [initialPosition]   ; X 座標
 000001F0  50			    push eax
 000001F1  E8 00000000 E	    call sfSprite_setPosition
 000001F6  83 C4 0C		    add esp, 12

 000001F9  E8 FFFFFF1E		    call enqueue

 000001FE			end_spawn:
 000001FE  C3			    ret
 000001FF			spawnDrum ENDP

 000001FF			updateDrums PROC
 000001FF  83 3D 00000E80 R	    cmp qsize, 0
	   00
 00000206  0F 86 000000A7	    jbe end_update
				    
 0000020C  8D 3D 000001DC R	    lea edi, drumQueue
 00000212  A1 00000E78 R	    mov eax, [front]
 00000217  BA 00000008		    mov edx, Drum_struct_size
 0000021C  F7 E2		    mul edx
 0000021E  03 F8		    add edi, eax

				    ; 讀取 drum
 00000220  8B 07		    mov eax, [edi]           ;sprite
 00000222  8B 5F 04		    mov ebx, [edi + 4]       ;dtype

 00000225  50			    push eax
 00000226  E8 00000000 E	    call sfSprite_getPosition
 0000022B  83 C4 08		    add esp, 8

 0000022E  F3/ 0F 11 05		    movss [spritePosX], xmm0
	   000001AC R
 00000236  83 05 000001AC R	    add [spritePosX], 50
	   32
 0000023D  83 3D 000001AC R	    cmp [spritePosX], 50
	   32
 00000244  73 6D		    jae end_update

 00000246  E8 FFFFFF20		    call dequeue

 0000024B  8B 0D 00000E80 R	    mov ecx, qsize
 00000251  8B 1D 00000E78 R	    mov ebx, front
 00000257			update_queue:
				    ; 讀取 drum
 00000257  8B 07		    mov eax, [edi]           ;sprite

 00000259  50			    push eax
 0000025A  E8 00000000 E	    call sfSprite_getPosition
 0000025F  83 C4 08		    add esp, 8
				    
 00000262  F3/ 0F 11 05		    movss [spritePosX], xmm0
	   000001AC R
 0000026A  F3/ 0F 11 0D		    movss [spritePosY], xmm1
	   000001B0 R
 00000272  F3/ 0F 10 05		    movss xmm0, [spritePosX]
	   000001AC R
 0000027A  F3/ 0F 10 0D		    movss xmm1, [DRUM_SPEED]
	   00000198 R
 00000282  F3/ 0F 5C C1		    subss xmm0, xmm1
 00000286  F3/ 0F 11 05		    movss [spritePosX], xmm0
	   000001AC R

 0000028E  FF 35 000001B0 R	    push dword ptr [spritePosY] ; Y 座標
 00000294  FF 35 000001AC R	    push dword ptr [spritePosX]   ; X 座標
 0000029A  50			    push eax
 0000029B  E8 00000000 E	    call sfSprite_setPosition
 000002A0  83 C4 0C		    add esp, 12

 000002A3  43			    inc ebx
 000002A4  8B C3		    mov eax, ebx
 000002A6  33 D2		    xor edx, edx
 000002A8  B9 00000064		    mov ecx, MAX_DRUMS
 000002AD  F7 F1		    div ecx
 000002AF  8B DA		    mov ebx, edx

 000002B1  E2 A4		loop update_queue

 000002B3			end_update:
 000002B3  C3			    ret
 000002B4			updateDrums ENDP

 000002B4			main_game_page PROC window:DWORD

				    ; 載入背景
 000002B7  E8 FFFFFD84		    call @load_bg
 000002BC  85 C0		    test eax, eax
 000002BE  0F 84 00000144	    jz @exit_program

				    ; 載入紅鼓紋理
 000002C4  E8 FFFFFDFF		    call @load_red_texture
 000002C9  85 C0		    test eax, eax
 000002CB  0F 84 00000137	    jz @exit_program

				    ; 載入藍鼓紋理
 000002D1  E8 FFFFFE07		    call @load_blue_texture
 000002D6  85 C0		    test eax, eax
 000002D8  0F 84 0000012A	    jz @exit_program

				    ;載入音樂
 000002DE  E8 FFFFFD1D		    call game_play_music
 000002E3  85 C0		    test eax, eax
 000002E5  0F 84 0000011D	    jz @exit_program

				    ;載入鼓面
 000002EB  E8 FFFFFD86		    call parseNoteChart
 000002F0  85 C0		    test eax, eax
 000002F2  0F 84 00000110	    jz @exit_program

				    ; 載入tja檔
				    ;push offset selected_beatmap_path
				    ;call parseNoteChart
				    ;test eax, eax
				    ;jz @exit_program

				    ; 初始化計時器
 000002F8  E8 00000000 E	    call sfClock_create
 000002FD  85 C0		    test eax, eax
 000002FF  0F 84 00000103	    jz @exit_program
 00000305  A3 00000E88 R	    mov clock, eax

 0000030A			@main_loop:

				    ; 檢查音樂是否停止
 0000030A  FF 35 00000E5C R	    push bgMusic
 00000310  E8 00000000 E	    call sfMusic_getStatus
 00000315  83 C4 04		    add esp, 4
 00000318  83 F8 00		    cmp eax, 0
 0000031B  0F 84 000000B8	    je to_end_page

				    ; 檢查視窗是否開啟
 00000321  8B 45 08		    mov eax, window
 00000324  50			    push eax
 00000325  E8 00000000 E	    call sfRenderWindow_isOpen
 0000032A  83 C4 04		    add esp, 4
 0000032D  85 C0		    test eax, eax
 0000032F  0F 84 000000D3	    je @exit_program

 00000335			L1:
				    ; 更新計時器
 00000335  A1 00000E88 R	    mov eax, clock
 0000033A  50			    push eax
 0000033B  E8 00000000 E	    call sfClock_getElapsedTime
 00000340  83 C4 04		    add esp, 4
 00000343  85 C0		    test eax, eax
 00000345  0F 84 000000BD	    jz @exit_program 

				    ; 提取微秒並轉換為秒數
 0000034B  BB 000003E8		    mov ebx, 1000 
 00000350  33 D2		    xor edx, edx
 00000352  F7 F3		    div ebx
 00000354  F3/ 0F 2A C0		    cvtsi2ss xmm0, eax
 00000358  3B 05 00000E94 R	    cmp eax, noteSpawnInterval
 0000035E  72 2C		    jb update

 00000360			L2:
 00000360  A1 0000AADC R	    mov eax, [currentNoteIndex]
 00000365  3B 05 0000AAD8 R	    cmp eax, totalNotes
 0000036B  73 1A		    jae restart
 0000036D  8D 3D 00000E98 R	    lea edi, notes
 00000373  03 F8		    add edi, eax
 00000375  FF 05 0000AADC R	    inc currentNoteIndex

 0000037B			L3:
 0000037B  8B 07		    mov eax, [edi]
 0000037D  83 F8 00		    cmp eax, 0
 00000380  74 05		    je restart
 00000382  E8 FFFFFE31		    call spawnDrum

 00000387			restart:
 00000387  E8 00000000 E	    call sfClock_restart

 0000038C			update:
 0000038C  E8 FFFFFE6E		    call updateDrums

				    ; 清除視窗
 00000391  FF 35 0000AB00 R	    push blackColor
 00000397  FF 75 08		    push window
 0000039A  E8 00000000 E	    call sfRenderWindow_clear
 0000039F  83 C4 08		    add esp, 8

				    ; 繪製背景
 000003A2  6A 00		    push 0
 000003A4  A1 000001D0 R	    mov eax, DWORD PTR [bgSprite]
 000003A9  50			    push eax
 000003AA  8B 4D 08		    mov ecx, DWORD PTR [window]
 000003AD  51			    push ecx
 000003AE  E8 00000000 E	    call sfRenderWindow_drawSprite
 000003B3  83 C4 0C		    add esp, 12

 000003B6  8B 0D 00000E80 R	    mov ecx, [qsize]
 000003BC  8B 15 00000E78 R	    mov edx, [front]
 000003C2  89 15 00000E84 R	    mov index, edx
				;draw_loop:
				    ; 繪製鼓
				    ;lea edi, drumQueue
				    ;mov eax, index
				    ;mov edx, Drum_struct_size
				    ;mul edx
				    ;add edi, eax

				    ;mov eax, [edi]           ;sprite

				    ;push 0
				    ;push DWORD PTR [eax]
				    ;push DWORD PTR [window]
				    ;call sfRenderWindow_drawSprite
				    ;add esp, 12

				    ;inc dword ptr [index]
				    ;mov eax, [index]
				    ;xor edx, edx
				    ;mov ecx, MAX_DRUMS
				    ;div ecx
				    ;mov dword ptr [index], edx

				;loop draw_loop

				    ; 顯示視窗
 000003C8  8B 45 08		    mov eax, window
 000003CB  50			    push eax
 000003CC  E8 00000000 E	    call sfRenderWindow_display
 000003D1  83 C4 04		    add esp, 4

 000003D4  E9 FFFFFF31		    jmp @main_loop

				; 跳轉結算畫面
 000003D9			to_end_page:
				    ;遊戲結束要切換到結尾畫面
 000003D9  FF 35 000001C8 R	    push score    
 000003DF  FF 35 000001C4 R	    push miss_count    
 000003E5  FF 35 000001C0 R	    push good_count   
 000003EB  FF 35 000001BC R	    push great_count    
 000003F1  FF 75 08		    push window        
 000003F4  E8 00000000 E	    call end_game_page
 000003F9  83 C4 14		    add esp, 20
 000003FC  C7 05 00000000 E	    mov DWORD PTR [currentPage], 2
	   00000002
 00000406  EB 00		    jmp @exit_program

 00000408			@exit_program:
				    ;call @cleanup_notes

 00000408  FF 35 000001D0 R	    push bgSprite
 0000040E  E8 00000000 E	    call sfSprite_destroy
 00000413  83 C4 04		    add esp, 4

 00000416  FF 35 000001CC R	    push bgTexture
 0000041C  E8 00000000 E	    call sfTexture_destroy
 00000421  83 C4 04		    add esp, 4

 00000424  FF 35 000001D4 R	    push redDrumTexture
 0000042A  E8 00000000 E	    call sfTexture_destroy
 0000042F  83 C4 04		    add esp, 4

 00000432  FF 35 000001D8 R	    push blueDrumTexture
 00000438  E8 00000000 E	    call sfTexture_destroy
 0000043D  83 C4 04		    add esp, 4

 00000440  FF 35 00000E88 R	    push clock
 00000446  E8 00000000 E	    call sfClock_destroy
 0000044B  83 C4 04		    add esp, 4

				    ;push dword ptr [track_shape]
				    ;call sfRectangleShape_destroy
				    ;add esp, 4

				    ret
 00000450			main_game_page ENDP

				END main_game_page
Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/21/24 01:42:54
main_game_page.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

Drum . . . . . . . . . . . . . .	 00000008
  sprite . . . . . . . . . . . .	 00000000	 DWord
  dtype  . . . . . . . . . . . .	 00000004	 DWord
key  . . . . . . . . . . . . . .	 00000014
  code . . . . . . . . . . . . .	 00000000	 DWord
  alt  . . . . . . . . . . . . .	 00000004	 DWord
  control  . . . . . . . . . . .	 00000008	 DWord
  shift  . . . . . . . . . . . .	 0000000C	 DWord
  system . . . . . . . . . . . .	 00000010	 DWord
mouseButton  . . . . . . . . . .	 0000000C
  button . . . . . . . . . . . .	 00000000	 DWord
  x  . . . . . . . . . . . . . .	 00000004	 DWord
  y  . . . . . . . . . . . . . .	 00000008	 DWord
sfColor  . . . . . . . . . . . .	 00000004
  r  . . . . . . . . . . . . . .	 00000000	 Byte
  g  . . . . . . . . . . . . . .	 00000001	 Byte
  b  . . . . . . . . . . . . . .	 00000002	 Byte
  a  . . . . . . . . . . . . . .	 00000003	 Byte
sfEvent  . . . . . . . . . . . .	 00000030
  _type  . . . . . . . . . . . .	 00000000	 DWord
  _size  . . . . . . . . . . . .	 00000004	 DWord
  mouse  . . . . . . . . . . . .	 00000008	 
  _key . . . . . . . . . . . . .	 00000014	 
  mouseMove  . . . . . . . . . .	 00000028	 QWord
sfFloatRect  . . . . . . . . . .	 00000010
  left . . . . . . . . . . . . .	 00000000	 DWord
  top  . . . . . . . . . . . . .	 00000004	 DWord
  _width . . . . . . . . . . . .	 00000008	 DWord
  height . . . . . . . . . . . .	 0000000C	 DWord
sfTime . . . . . . . . . . . . .	 00000004
  microseconds . . . . . . . . .	 00000000	 DWord
sfVector2f . . . . . . . . . . .	 00000008
  x  . . . . . . . . . . . . . .	 00000000	 DWord
  y  . . . . . . . . . . . . . .	 00000004	 DWord
sfVector2i . . . . . . . . . . .	 00000008
  x  . . . . . . . . . . . . . .	 00000000	 DWord
  y  . . . . . . . . . . . . . .	 00000004	 DWord
sfVideoMode  . . . . . . . . . .	 0000000C
  _width . . . . . . . . . . . .	 00000000	 DWord
  height . . . . . . . . . . . .	 00000004	 DWord
  bpp  . . . . . . . . . . . . .	 00000008	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 0000AF4E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000450 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

@load_bg . . . . . . . . . . . .	P Near	 00000040 _TEXT	Length= 00000036 Public C
@load_blue_texture . . . . . . .	P Near	 000000DD _TEXT	Length= 00000015 Public C
@load_red_texture  . . . . . . .	P Near	 000000C8 _TEXT	Length= 00000015 Public C
dequeue  . . . . . . . . . . . .	P Near	 0000016B _TEXT	Length= 0000004D Public C
  end_dequeue  . . . . . . . . .	L Near	 000001B7 _TEXT	
enqueue  . . . . . . . . . . . .	P Near	 0000011C _TEXT	Length= 0000004F Public C
  end_enqueue  . . . . . . . . .	L Near	 0000016A _TEXT	
game_play_music  . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001C Public C
isQueueEmpty . . . . . . . . . .	P Near	 00000107 _TEXT	Length= 00000015 Public C
  queue_empty  . . . . . . . . .	L Near	 00000116 _TEXT	
isQueueFull  . . . . . . . . . .	P Near	 000000F2 _TEXT	Length= 00000015 Public C
  queue_full . . . . . . . . . .	L Near	 00000101 _TEXT	
main_game_page . . . . . . . . .	P Near	 000002B4 _TEXT	Length= 0000019C Public C
  window . . . . . . . . . . . .	DWord	 bp + 00000008
  @main_loop . . . . . . . . . .	L Near	 0000030A _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 00000335 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000360 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 0000037B _TEXT	
  restart  . . . . . . . . . . .	L Near	 00000387 _TEXT	
  update . . . . . . . . . . . .	L Near	 0000038C _TEXT	
  to_end_page  . . . . . . . . .	L Near	 000003D9 _TEXT	
  @exit_program  . . . . . . . .	L Near	 00000408 _TEXT	
parseNoteChart . . . . . . . . .	P Near	 00000076 _TEXT	Length= 00000052 Public C
  parse_loop . . . . . . . . . .	L Near	 00000084 _TEXT	
  next_char  . . . . . . . . . .	L Near	 0000009A _TEXT	
  parse_end  . . . . . . . . . .	L Near	 0000009D _TEXT	
readFile . . . . . . . . . . . .	P Near	 0000001C _TEXT	Length= 00000024 Public C
spawnDrum  . . . . . . . . . . .	P Near	 000001B8 _TEXT	Length= 00000047 Public C
  spawnRed . . . . . . . . . . .	L Near	 000001DF _TEXT	
  end_spawn  . . . . . . . . . .	L Near	 000001FE _TEXT	
updateDrums  . . . . . . . . . .	P Near	 000001FF _TEXT	Length= 000000B5 Public C
  update_queue . . . . . . . . .	L Near	 00000257 _TEXT	
  end_update . . . . . . . . . .	L Near	 000002B3 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000001h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CloseHandle@4  . . . . . . . . .	L Near	 00000000 FLAT	External C
CreateFileA@28 . . . . . . . . .	L Near	 00000000 FLAT	External C
DRUM_SPEED . . . . . . . . . . .	DWord	 00000198 _DATA	
Drum_struct_size . . . . . . . .	Number	 00000008h   
ExitProcess@4  . . . . . . . . .	L Near	 00000000 FLAT	External C
FILE_ATTRIBUTE_NORMAL  . . . . .	Text   	 80h
FILE_SHARE_READ  . . . . . . . .	Text   	 0x00000001
GENERIC_READ . . . . . . . . . .	Text   	 80000000h
GetLastError@0 . . . . . . . . .	L Near	 00000000 FLAT	External C
GetStdHandle@4 . . . . . . . . .	L Near	 00000000 FLAT	External C
MAX_DRUMS  . . . . . . . . . . .	Number	 00000064h   
MAX_LINE_LENGTH  . . . . . . . .	Number	 000003E8h   
MAX_NOTES  . . . . . . . . . . .	Number	 00002710h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
ReadFile@20  . . . . . . . . . .	L Near	 00000000 FLAT	External C
SCREEN_HEIGHT  . . . . . . . . .	Number	 000002D0h   
SCREEN_WIDTH . . . . . . . . . .	Text   	 1280.0
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
WriteConsoleA@20 . . . . . . . .	L Near	 00000000 FLAT	External C
WriteFile@20 . . . . . . . . . .	L Near	 00000000 FLAT	External C
beatmapString  . . . . . . . . .	Byte	 000000AA _DATA	
bgSprite . . . . . . . . . . . .	DWord	 000001D0 _DATA	
bgTexture  . . . . . . . . . . .	DWord	 000001CC _DATA	
bg_path  . . . . . . . . . . . .	Byte	 00000000 _DATA	
bgmusic  . . . . . . . . . . . .	DWord	 00000E5C _DATA	
blackColor . . . . . . . . . . .	sfColor	 0000AB00 _DATA	
blueDrumTexture  . . . . . . . .	DWord	 000001D8 _DATA	
blue_drum_path . . . . . . . . .	Byte	 00000039 _DATA	
bpm  . . . . . . . . . . . . . .	DWord	 00000E90 _DATA	
bytesRead  . . . . . . . . . . .	DWord	 0000AB26 _DATA	
clock  . . . . . . . . . . . . .	DWord	 00000E88 _DATA	
const_60000  . . . . . . . . . .	DWord	 000001B4 _DATA	
create_button  . . . . . . . . .	L Near	 00000000 FLAT	External C
currentNoteIndex . . . . . . . .	DWord	 0000AADC _DATA	
currentPage  . . . . . . . . . .	DWord	 00000000 FLAT	External C
current_drum . . . . . . . . . .	Drum	 00000E70 _DATA	
drumQueue  . . . . . . . . . . .	DWord	 000001DC _DATA	
end_game_page  . . . . . . . . .	L Near	 00000000 FLAT	External C
filename . . . . . . . . . . . .	Byte	 0000AB10 _DATA	
four . . . . . . . . . . . . . .	DWord	 000001B8 _DATA	
front  . . . . . . . . . . . . .	DWord	 00000E78 _DATA	
good_count . . . . . . . . . . .	DWord	 000001C0 _DATA	
great_count  . . . . . . . . . .	DWord	 000001BC _DATA	
hFile  . . . . . . . . . . . . .	DWord	 0000AB22 _DATA	
index  . . . . . . . . . . . . .	DWord	 00000E84 _DATA	
initialPosition  . . . . . . . .	sfVector2f  0000AB04 _DATA	
miss_count . . . . . . . . . . .	DWord	 000001C4 _DATA	
msgReadFail  . . . . . . . . . .	Byte	 0000AF2A _DATA	
msgReadSuccess . . . . . . . . .	Byte	 0000AF3E _DATA	
noteSpawnInterval  . . . . . . .	DWord	 00000E94 _DATA	
note_timer . . . . . . . . . . .	DWord	 00000E8C _DATA	
notes  . . . . . . . . . . . . .	DWord	 00000E98 _DATA	
qsize  . . . . . . . . . . . . .	DWord	 00000E80 _DATA	
readBuffer . . . . . . . . . . .	Byte	 0000AB2A _DATA	
rear . . . . . . . . . . . . . .	DWord	 00000E7C _DATA	
redDrumTexture . . . . . . . . .	DWord	 000001D4 _DATA	
red_drum_path  . . . . . . . . .	Byte	 00000020 _DATA	
score  . . . . . . . . . . . . .	DWord	 000001C8 _DATA	
selected_beatmap_path  . . . . .	Byte	 0000008B _DATA	
selected_music_path  . . . . . .	Byte	 00000053 _DATA	
sfClock_create . . . . . . . . .	L Near	 00000000 FLAT	External C
sfClock_destroy  . . . . . . . .	L Near	 00000000 FLAT	External C
sfClock_getElapsedTime . . . . .	L Near	 00000000 FLAT	External C
sfClock_restart  . . . . . . . .	L Near	 00000000 FLAT	External C
sfClose  . . . . . . . . . . . .	Number	 00000004h   
sfColor_fromRGBA . . . . . . . .	L Near	 00000000 FLAT	External C
sfColor_fromRGB  . . . . . . . .	L Near	 00000000 FLAT	External C
sfEvtClosed  . . . . . . . . . .	Number	 00000000h   
sfEvtGainedFocus . . . . . . . .	Number	 00000003h   
sfEvtKeyPressed  . . . . . . . .	Number	 00000005h   
sfEvtKeyReleased . . . . . . . .	Number	 00000006h   
sfEvtLostFocus . . . . . . . . .	Number	 00000002h   
sfEvtMouseButtonPressed  . . . .	Number	 00000009h   
sfEvtMouseButtonReleased . . . .	Number	 0000000Ah   
sfEvtMouseEntered  . . . . . . .	Number	 0000000Ch   
sfEvtMouseLeft . . . . . . . . .	Number	 0000000Dh   
sfEvtMouseMoved  . . . . . . . .	Number	 0000000Bh   
sfEvtMouseWheelMoved . . . . . .	Number	 00000007h   
sfEvtMouseWheelScrolled  . . . .	Number	 00000008h   
sfEvtResized . . . . . . . . . .	Number	 00000001h   
sfEvtTextEntered . . . . . . . .	Number	 00000004h   
sfFalse  . . . . . . . . . . . .	Number	 00000000h   
sfFont_createFromFile  . . . . .	L Near	 00000000 FLAT	External C
sfFont_destroy . . . . . . . . .	L Near	 00000000 FLAT	External C
sfFullscreen . . . . . . . . . .	Number	 00000008h   
sfKeyA . . . . . . . . . . . . .	Number	 00000000h   
sfKeyD . . . . . . . . . . . . .	Number	 00000003h   
sfKeyEnter . . . . . . . . . . .	Number	 0000003Ah   
sfKeyEscape  . . . . . . . . . .	Number	 00000024h   
sfKeyS . . . . . . . . . . . . .	Number	 00000012h   
sfMouseLeft  . . . . . . . . . .	Number	 00000000h   
sfMouseMiddle  . . . . . . . . .	Number	 00000002h   
sfMouseRight . . . . . . . . . .	Number	 00000001h   
sfMusic_createFromFile . . . . .	L Near	 00000000 FLAT	External C
sfMusic_destroy  . . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_getStatus  . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_play . . . . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_setLoop  . . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_stop . . . . . . . . . .	L Near	 00000000 FLAT	External C
sfNone . . . . . . . . . . . . .	Number	 00000000h   
sfRectangleShape_create  . . . .	L Near	 00000000 FLAT	External C
sfRectangleShape_destroy . . . .	L Near	 00000000 FLAT	External C
sfRectangleShape_setFillColor  .	L Near	 00000000 FLAT	External C
sfRectangleShape_setOutlineColor .	L Near	 00000000 FLAT	External C
sfRectangleShape_setOutlineThickness .	L Near	 00000000 FLAT	External C
sfRectangleShape_setPosition . .	L Near	 00000000 FLAT	External C
sfRectangleShape_setSize . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_clear . . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_close . . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_create  . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_destroy . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_display . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_drawRectangleShape 	L Near	 00000000 FLAT	External C
sfRenderWindow_drawSprite  . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_drawText  . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_isOpen  . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_pollEvent . . . .	L Near	 00000000 FLAT	External C
sfResize . . . . . . . . . . . .	Number	 00000002h   
sfSleep  . . . . . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_create  . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_destroy . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_getPosition . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_move  . . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_setOrigin . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_setPosition . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_setTexture  . . . . . .	L Near	 00000000 FLAT	External C
sfText_create  . . . . . . . . .	L Near	 00000000 FLAT	External C
sfText_destroy . . . . . . . . .	L Near	 00000000 FLAT	External C
sfText_getGlobalBounds . . . . .	L Near	 00000000 FLAT	External C
sfText_getLocalBounds  . . . . .	L Near	 00000000 FLAT	External C
sfText_setCharacterSize  . . . .	L Near	 00000000 FLAT	External C
sfText_setFillColor  . . . . . .	L Near	 00000000 FLAT	External C
sfText_setFont . . . . . . . . .	L Near	 00000000 FLAT	External C
sfText_setOutlineColor . . . . .	L Near	 00000000 FLAT	External C
sfText_setOutlineThickness . . .	L Near	 00000000 FLAT	External C
sfText_setPosition . . . . . . .	L Near	 00000000 FLAT	External C
sfText_setString . . . . . . . .	L Near	 00000000 FLAT	External C
sfTexture_createFromFile . . . .	L Near	 00000000 FLAT	External C
sfTexture_destroy  . . . . . . .	L Near	 00000000 FLAT	External C
sfTitlebar . . . . . . . . . . .	Number	 00000001h   
sfTrue . . . . . . . . . . . . .	Number	 00000001h   
spritePosX . . . . . . . . . . .	DWord	 000001AC _DATA	
spritePosY . . . . . . . . . . .	DWord	 000001B0 _DATA	
stdout_handle  . . . . . . . . .	DWord	 0000AB0C _DATA	
totalNotes . . . . . . . . . . .	DWord	 0000AAD8 _DATA	
trackBounds  . . . . . . . . . .	sfFloatRect  00000E60 _DATA	
track_height . . . . . . . . . .	DWord	 0000019C _DATA	
track_width  . . . . . . . . . .	DWord	 000001A0 _DATA	
track_x  . . . . . . . . . . . .	DWord	 000001A4 _DATA	
track_y  . . . . . . . . . . . .	DWord	 000001A8 _DATA	
whiteColor . . . . . . . . . . .	sfColor	 0000AAFC _DATA	
windowTitle  . . . . . . . . . .	Byte	 0000AAEC _DATA	
window_videoMode . . . . . . . .	sfVideoMode  0000AAE0 _DATA	

	   0 Warnings
	   0 Errors
