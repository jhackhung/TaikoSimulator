Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/20/24 03:18:58
main_game_page.asm					     Page 1 - 1


				.model flat, c
				include csfml.inc
			      C ; CSFML.INC - SFML Definitions for x86 Assembly
			      C ; 使用 MASM 語法
			      C 
			      C includelib csfml-audio.lib
			      C includelib csfml-graphics.lib
			      C includelib csfml-system.lib
			      C includelib csfml-window.lib
			      C 
			      C ; sfBool 定義
 = 00000000		      C sfFalse     equ 0
 = 00000001		      C sfTrue      equ 1
			      C 
			      C ; sfEventType 定義
 = 00000000		      C sfEvtClosed               equ 0
 = 00000001		      C sfEvtResized              equ 1
 = 00000002		      C sfEvtLostFocus            equ 2
 = 00000003		      C sfEvtGainedFocus          equ 3
 = 00000004		      C sfEvtTextEntered          equ 4
 = 00000005		      C sfEvtKeyPressed           equ 5
 = 00000006		      C sfEvtKeyReleased          equ 6
 = 00000007		      C sfEvtMouseWheelMoved      equ 7
 = 00000008		      C sfEvtMouseWheelScrolled   equ 8
 = 00000009		      C sfEvtMouseButtonPressed   equ 9
 = 0000000A		      C sfEvtMouseButtonReleased  equ 10
 = 0000000B		      C sfEvtMouseMoved           equ 11
 = 0000000C		      C sfEvtMouseEntered         equ 12
 = 0000000D		      C sfEvtMouseLeft            equ 13
			      C 
			      C ; sfMouseButton 定義
 = 00000000		      C sfMouseLeft   equ 0
 = 00000001		      C sfMouseRight  equ 1
 = 00000002		      C sfMouseMiddle equ 2
			      C 
			      C ; sfKey 定義
 = 0000003A		      C sfKeyEnter    equ 58
 = 00000000		      C sfKeyA        equ 0
 = 00000012		      C sfKeyS        equ 18
 = 00000003		      C sfKeyD        equ 3
 = 00000024		      C sfKeyEscape   equ 36
			      C 
			      C ; 視窗風格定義
 = 00000000		      C sfNone       equ 0
 = 00000001		      C sfTitlebar   equ 1
 = 00000002		      C sfResize     equ 2
 = 00000004		      C sfClose      equ 4
 = 00000008		      C sfFullscreen equ 8
			      C 
			      C ; 結構體定義
 00000008		      C sfVector2f STRUCT
 00000000  00000000	      C     x REAL4 ?
 00000004  00000000	      C     y REAL4 ?
			      C sfVector2f ENDS
			      C 
 00000008		      C sfVector2i STRUCT
 00000000  00000000	      C     x SDWORD ?
 00000004  00000000	      C     y SDWORD ?
			      C sfVector2i ENDS
			      C 
 0000000C		      C sfVideoMode STRUCT
 00000000  00000000	      C     _width  DWORD ?
 00000004  00000000	      C     height DWORD ?
 00000008  00000000	      C     bpp    DWORD ?
			      C sfVideoMode ENDS
			      C 
 00000004		      C sfColor STRUCT
 00000000  00		      C     r BYTE ?
 00000001  00		      C     g BYTE ?
 00000002  00		      C     b BYTE ?
 00000003  00		      C     a BYTE ?
			      C sfColor ENDS
			      C 
 00000010		      C sfFloatRect STRUCT
 00000000  00000000	      C     left   REAL4 ?
 00000004  00000000	      C     top    REAL4 ?
 00000008  00000000	      C     _width  REAL4 ?
 0000000C  00000000	      C     height REAL4 ?
			      C sfFloatRect ENDS
			      C 
 0000000C		      C mouseButton STRUCT
 00000000  00000000	      C     button DWORD ?
 00000004  00000000	      C     x DWORD ?
 00000008  00000000	      C     y DWORD ?
			      C mouseButton ENDS
			      C 
 00000014		      C key STRUCT
 00000000  00000000	      C     code DWORD ?
 00000004  00000000	      C     alt DWORD ?
 00000008  00000000	      C     control DWORD ?
 0000000C  00000000	      C     shift DWORD ?
 00000010  00000000	      C     system DWORD ?
			      C key ENDS
			      C 
 00000030		      C sfEvent STRUCT
 00000000  00000000	      C     _type DWORD ?                
 00000004  00000000	      C     _size DWORD ?                
 00000008  00000000	      C     mouse mouseButton <>       
	   00000000
	   00000000
 00000014  00000000	      C     _key key <>                 
	   00000000
	   00000000
	   00000000
	   00000000
 00000028  00000000	      C     mouseMove sfVector2i <>     
	   00000000
			      C sfEvent ENDS
			      C 
 00000004		      C sfTime STRUCT
 00000000  00000000	      C     microseconds DWORD ?    
			      C sfTime ENDS
			      C 
			      C ; 函數原型 - 視窗相關
			      C EXTERN sfRenderWindow_create:PROC
			      C EXTERN sfRenderWindow_destroy:PROC
			      C EXTERN sfRenderWindow_close:PROC
			      C EXTERN sfRenderWindow_isOpen:PROC
			      C EXTERN sfRenderWindow_clear:PROC
			      C EXTERN sfRenderWindow_display:PROC
			      C EXTERN sfRenderWindow_pollEvent:PROC
			      C EXTERN sfRenderWindow_drawSprite:PROC
			      C EXTERN sfRenderWindow_drawText:PROC
			      C 
			      C ; 函數原型 - 紋理相關
			      C EXTERN sfTexture_createFromFile:PROC
			      C EXTERN sfTexture_destroy:PROC
			      C 
			      C ; 函數原型 - 精靈相關
			      C EXTERN sfSprite_create:PROC
			      C EXTERN sfSprite_destroy:PROC
			      C EXTERN sfSprite_setTexture:PROC
			      C EXTERN sfSprite_setPosition:PROC
			      C EXTERN sfSprite_setOrigin:PROC
			      C EXTERN sfSprite_move:PROC
			      C EXTERN sfSprite_getPosition:PROC
			      C 
			      C ; 函數原型 - 音樂相關
			      C EXTERN sfMusic_createFromFile:PROC
			      C EXTERN sfMusic_destroy:PROC
			      C EXTERN sfMusic_play:PROC
			      C EXTERN sfMusic_setLoop:PROC
			      C EXTERN sfMusic_stop: PROC
			      C EXTERN sfMusic_getStatus: PROC
			      C 
			      C ; 函數原型 - 文字相關
			      C EXTERN sfFont_createFromFile:PROC
			      C EXTERN sfFont_destroy:PROC
			      C EXTERN sfText_create:PROC
			      C EXTERN sfText_destroy:PROC
			      C EXTERN sfText_setFont:PROC
			      C EXTERN sfText_setString:PROC
			      C EXTERN sfText_setCharacterSize:PROC
			      C EXTERN sfText_setFillColor:PROC
			      C EXTERN sfText_setOutlineColor:PROC
			      C EXTERN sfText_setOutlineThickness:PROC
			      C EXTERN sfText_getLocalBounds:PROC
			      C EXTERN sfText_getGlobalBounds:PROC
			      C EXTERN sfText_setPosition:PROC
			      C 
			      C ; 函數原型 - 顏色相關
			      C EXTERN sfColor_fromRGB:PROC
			      C EXTERN sfColor_fromRGBA:PROC
			      C 
			      C ; 函數原型 - 矩形相關
			      C EXTERN sfRectangleShape_create: PROC
			      C EXTERN sfRectangleShape_setPosition: PROC
			      C EXTERN sfRectangleShape_setSize: PROC
			      C EXTERN sfRectangleShape_setFillColor: PROC
			      C EXTERN sfRectangleShape_setOutlineThickness: PROC
			      C EXTERN sfRenderWindow_drawRectangleShape: PROC
			      C EXTERN sfRectangleShape_destroy: PROC
			      C EXTERN sfRectangleShape_setOutlineColor: PROC
			      C 
			      C EXTERN sfSleep: PROC
			      C 
			      C EXTERN sfClock_create:PROC
			      C EXTERN sfClock_getElapsedTime:PROC
			      C EXTERN sfClock_restart:PROC
			      C EXTERN sfClock_destroy:PROC
			      C 
				include windows.inc
			      C ; windows.inc - 包含 Windows API 函數的定義
			      C 
			      C includelib kernel32.lib
			      C 
			      C extern GetStdHandle@4:PROC
			      C extern CreateFileA@28:PROC
			      C extern WriteFile@20:PROC
			      C extern ReadFile@20:PROC
			      C extern ExitProcess@4:PROC
			      C extern CloseHandle@4:PROC
			      C extern WriteConsoleA@20:PROC
			      C extern GetLastError@0:PROC
			      C 
			      C ; 定義常量
 = 0x80000000		      C GENERIC_READ         EQU 0x80000000
 = 0x00000001		      C FILE_SHARE_READ      EQU 0x00000001
 =-0000000B		      C STD_OUTPUT_HANDLE equ -11
 = 00000003		      C OPEN_EXISTING        EQU 3
 = 0x00000080		      C FILE_ATTRIBUTE_NORMAL EQU 0x00000080
			      C 
			      C 
			      C 

				extern currentPage: DWORD
				extern create_button: PROC
				EXTERN end_game_page:PROC

 = 80000000h			GENERIC_READ equ 80000000h
 = 80h				FILE_ATTRIBUTE_NORMAL equ 80h
 =-0000000B			STD_OUTPUT_HANDLE equ -11

 = 00000000			BUTTON_STATE_NORMAL equ 0
 = 00000001			BUTTON_STATE_PRESSED equ 1

 00000008			Button STRUCT
 00000000  00000000		    shape dd ?
 00000004  00000000		    state dd ?
				Button ENDS

				; Drum 結構
 00000008			Drum STRUCT
 00000000  00000000		    sprite dd 0
 00000004  00000000		    dtype dd 0      ; 1 = 紅色鼓, 2 = 藍色鼓
				Drum ENDS

 00000000			.data
				    ; 檔案路徑
 00000000 61 73 73 65 74	    bg_path db "assets/main/game_background.jpg", 0
	   73 2F 6D 61 69
	   6E 2F 67 61 6D
	   65 5F 62 61 63
	   6B 67 72 6F 75
	   6E 64 2E 6A 70
	   67 00
 00000020 61 73 73 65 74	    red_drum_path db "assets/main/red_note.png", 0
	   73 2F 6D 61 69
	   6E 2F 72 65 64
	   5F 6E 6F 74 65
	   2E 70 6E 67 00
 00000039 61 73 73 65 74	    blue_drum_path db "assets/main/blue_note.png", 0
	   73 2F 6D 61 69
	   6E 2F 62 6C 75
	   65 5F 6E 6F 74
	   65 2E 70 6E 67
	   00
 00000053 61 73 73 65 74	    selected_music_path db "assets/never-gonna-give-you-up-official-music-video.mp3", 0
	   73 2F 6E 65 76
	   65 72 2D 67 6F
	   6E 6E 61 2D 67
	   69 76 65 2D 79
	   6F 75 2D 75 70
	   2D 6F 66 66 69
	   63 69 61 6C 2D
	   6D 75 73 69 63
	   2D 76 69 64 65
	   6F 2E 6D 70 33
	   00
 0000008B 61 73 73 65 74	    selected_beatmap_path db "assets/music/song1_beatmap.tja", 0
	   73 2F 6D 75 73
	   69 63 2F 73 6F
	   6E 67 31 5F 62
	   65 61 74 6D 61
	   70 2E 74 6A 61
	   00

 000000AA 31 30 30 31 32	    inputString db "1001201000102010,1001202000002222,1001201000102000,0000000000112212", 0
	   30 31 30 30 30
	   31 30 32 30 31
	   30 2C 31 30 30
	   31 32 30 32 30
	   30 30 30 30 32
	   32 32 32 2C 31
	   30 30 31 32 30
	   31 30 30 30 31
	   30 32 30 30 30
	   2C 30 30 30 30
	   30 30 30 30 30
	   30 31 31 32 32
	   31 32 00

				    ;常數
 = 00000064			    MAX_DRUMS equ 100 
 = 00000008			    Drum_struct_size equ 8     ; Drum 結構大小
 = 00002710			    MAX_NOTES equ 10000
 = 000003E8			    MAX_LINE_LENGTH equ 1000
 = 1280.0			    SCREEN_WIDTH equ 1280.0
 = 000002D0			    SCREEN_HEIGHT equ 720
 000000EE 3F000000		    DRUM_SPEED dd 0.5
 000000F2 42C80000		    track_height REAL4 100.0
 000000F6 44A00000		    track_width REAL4 1280.0
 000000FA 44200000		    track_x REAL4 640.0
 000000FE 43480000		    track_y REAL4 200.0
 00000102 00000000		    spritePosX    dd 0.0
 00000106 00000000		    spritePosY    dd 0.0
 0000010A 476A6000		    constant dd 60000.0         ; 常數 60000.0
 0000010E 40800000		    four dd 4.0                 ; 常數 4.0

				    ;用來存great good miss 的次數和最後總分
 00000112 00000000		    great_count DWORD 0
 00000116 00000000		    good_count DWORD 0
 0000011A 00000000		    miss_count DWORD 0
 0000011E 00000000		    score DWORD 0

				    ; CSFML 物件
 00000122 00000000		    bgTexture dd 0
 00000126 00000000		    bgSprite dd 0
 0000012A 00000000		    redDrumTexture dd 0
 0000012E 00000000		    blueDrumTexture dd 0
 00000132  00000320 [		    drumQueue dd MAX_DRUMS * Drum_struct_size DUP(0)
	    00000000
	   ]
 00000DB2 00000000		    bgmusic dd 0
 00000DB6 00000000		    trackBounds sfFloatRect <>
	   00000000
	   00000000
	   00000000
 00000DC6 00000000		    track_shape Button <>
	   00000000
 00000DCE 00000000		    current_drum Drum <>
	   00000000

				    ;Queue 相關
 00000DD6 00000000		    front dd 0
 00000DDA 00000000		    rear dd 0
 00000DDE 00000000		    qsize dd 0

				    ; 時間相關
 00000DE2 00000000		    clock dd 0
 00000DE6 00000000		    note_timer REAL4 0.0       ; 音符生成計時器
				    ;note_interval REAL4 1.0    ; 每 1 秒生成一個音符

				    ;譜面相關
 00000DEA 42E34CCD		    bpm dd 113.65 ; 預設 BPM
 00000DEE 00000000		    noteSpawnInterval dd 0.0  ; 音符生成間隔 (毫秒)
 00000DF2  00002710 [		    notes dd MAX_NOTES DUP(0) ; 儲存音符數據
	    00000000
	   ]
 0000AA32 00000000		    totalNotes dd 0

				    ; 視窗設定
 0000AA36 00000500		    window_videoMode sfVideoMode <1280, 720, 32>
	   000002D0
	   00000020
 0000AA42 54 61 69 6B 6F	    windowTitle db "Taiko Simulator", 0
	   20 53 69 6D 75
	   6C 61 74 6F 72
	   00
				    ;scrollSpeed REAL4 -0.5      ; 音符滾動速度 (向左移動)

				    ; 顏色常數
 0000AA52 FF FF FF FF		    whiteColor sfColor <255, 255, 255, 255> ; 白色
 0000AA56 00 00 00 FF		    blackColor sfColor <0, 0, 0, 255>       ; 黑色

 0000AA5A 44A00000		    initialPosition sfVector2f <SCREEN_WIDTH, 200.0>  ; 音符的 X 和 Y 座標
	   43480000
				    ;movePosition sfVector2f <-0.1, 0.0>

				    ;讀檔相關
 0000AA62 00000000		    stdout_handle dd 0

 0000AA66 73 6F 6E 67 31	    filename db "song1_beatmap.tja", 0
	   5F 62 65 61 74
	   6D 61 70 2E 74
	   6A 61 00
 0000AA78 00000000		    hFile dd 0
 0000AA7C 00000000		    bytesRead dd 0
 0000AA80  00000400 [		    readBuffer db 1024 dup(0)
	    00
	   ]

 0000AE80 52 65 61 64 20	    msgReadFail db "Read file failed.", 13, 10, 0
	   66 69 6C 65 20
	   66 61 69 6C 65
	   64 2E 0D 0A 00

 0000AE94 46 69 6C 65 20	    msgReadSuccess db "File content:", 13, 10, 0
	   63 6F 6E 74 65
	   6E 74 3A 0D 0A
	   00


 00000000			.code

				;播放音樂
 00000000			game_play_music PROC
 00000000  68 00000053 R	    push offset selected_music_path
 00000005  E8 00000000 E	    call sfMusic_createFromFile
 0000000A  83 C4 04		    add esp, 4 
 0000000D  A3 00000DB2 R	    mov bgMusic, eax

 00000012  50			    push eax
 00000013  E8 00000000 E	    call sfMusic_play
 00000018  83 C4 04		    add esp, 4
 0000001B  C3			    ret
 0000001C			game_play_music ENDP

				; 讀取文件內容
 0000001C			readFile PROC
 0000001C  8B F4		    mov esi, esp

 0000001E  6A 00		    push 0
 00000020  68 0000AA7C R	    push offset bytesRead
 00000025  68 00000400		    push 1024
 0000002A  68 0000AA80 R	    push offset readBuffer
 0000002F  FF 35 0000AA78 R	    push [hFile]
 00000035  E8 00000000 E	    call ReadFile@20
 0000003A  83 C4 14		    add esp, 20

 0000003D  8B E6		    mov esp, esi
 0000003F  C3			    ret
 00000040			readFile ENDP

				; 載入背景
 00000040			@load_bg PROC

				    ; 創建背景紋理
 00000040  6A 00		    push 0
 00000042  68 00000000 R	    push offset bg_path
 00000047  E8 00000000 E	    call sfTexture_createFromFile
 0000004C  83 C4 08		    add esp, 8
 0000004F  85 C0		    test eax, eax
 00000051  74 2B		    jz @fail_load
 00000053  A3 00000122 R	    mov bgTexture, eax

				    ; 創建背景精靈
 00000058  E8 00000000 E	    call sfSprite_create
 0000005D  85 C0		    test eax, eax
 0000005F  74 1D		    jz @fail_load
 00000061  A3 00000126 R	    mov DWORD PTR [bgSprite], eax

				    ; 設定紋理
 00000066  6A 01		    push 1
 00000068  A1 00000122 R	    mov eax, DWORD PTR [bgTexture]
 0000006D  50			    push eax
 0000006E  8B 0D 00000126 R	    mov ecx, DWORD PTR [bgSprite]
 00000074  51			    push ecx
 00000075  E8 00000000 E	    call sfSprite_setTexture
 0000007A  83 C4 0C		    add esp, 12
 0000007D  C3			    ret

 0000007E			@fail_load:
 0000007E  B8 00000000		    mov eax, 0
 00000083  C3			    ret
 00000084			@load_bg ENDP

 00000084			parseNoteChart PROC
 00000084			start:
				    ; 初始化
 00000084  8D 35 000000AA R	    lea esi, [inputString]  ; ESI 指向輸入字串起始位置
 0000008A  8D 3D 00000DF2 R	    lea edi, [notes]        ; EDI 指向音符存放陣列
 00000090  33 C9		    xor ecx, ecx            ; ECX 記錄總音符數

 00000092			parse_loop:
 00000092  8A 06		    mov al, [esi]           ; 讀取目前字元
 00000094  3C 00		    cmp al, 0               ; 檢查是否結束字串
 00000096  74 17		    je parse_end

 00000098  3C 30		    cmp al, '0'             ; 檢查是否是數字
 0000009A  72 0C		    jb skip_char
 0000009C  3C 39		    cmp al, '9'
 0000009E  77 08		    ja skip_char

 000000A0  2C 30		    sub al, '0'             ; 將 ASCII 字元轉為數字
 000000A2  88 07		    mov [edi], al           ; 將數字存入音符陣列
 000000A4  47			    inc edi                 ; 移動到下一個音符位置
 000000A5  41			    inc ecx                 ; 音符數量加一
 000000A6  EB 04		    jmp next_char

 000000A8			skip_char:
 000000A8  3C 2C		    cmp al, ','         ; 如果是逗號，跳過
 000000AA  75 00		    jne next_char

 000000AC			next_char:
 000000AC  46			    inc esi                 ; 移動到下一個字元
 000000AD  EB E3		    jmp parse_loop

 000000AF			parse_end:
 000000AF  89 0D 0000AA32 R	    mov [totalNotes], ecx

 000000B5  F3/ 0F 10 05		    movss xmm0, [constant]
	   0000010A R
 000000BD  F3/ 0F 10 0D		    movss xmm1, [bpm]
	   00000DEA R
 000000C5  F3/ 0F 59 0D		    mulss xmm1, [four]
	   0000010E R
 000000CD  F3/ 0F 5E C1		    divss xmm0, xmm1
 000000D1  F3/ 0F 11 05		    movss [noteSpawnInterval], xmm0
	   00000DEE R

 000000D9  C3			    ret
 000000DA			parseNoteChart ENDP

				; 載入紅鼓紋理
 000000DA			@load_red_texture PROC
 000000DA  6A 00		    push 0
 000000DC  68 00000020 R	    push offset red_drum_path
 000000E1  E8 00000000 E	    call sfTexture_createFromFile
 000000E6  83 C4 08		    add esp, 8
 000000E9  85 C0		    test eax, eax
 000000EB  74 06		    jz @fail_load
 000000ED  A3 0000012A R	    mov redDrumTexture, eax

 000000F2  C3			    ret
 000000F3			@fail_load:
 000000F3  B8 00000000		    mov eax, 0
 000000F8  C3			    ret
 000000F9			@load_red_texture ENDP

				; 載入藍鼓紋理
 000000F9			@load_blue_texture PROC
 000000F9  6A 00		    push 0
 000000FB  68 00000039 R	    push offset blue_drum_path
 00000100  E8 00000000 E	    call sfTexture_createFromFile
 00000105  83 C4 08		    add esp, 8
 00000108  85 C0		    test eax, eax
 0000010A  74 06		    jz @fail_load
 0000010C  A3 0000012E R	    mov blueDrumTexture, eax

 00000111  C3			    ret
 00000112			@fail_load:
 00000112  B8 00000000		    mov eax, 0
 00000117  C3			    ret
 00000118			@load_blue_texture ENDP

 00000118			isQueueFull PROC
 00000118  A1 00000DDE R	    mov eax, qsize
 0000011D  83 F8 64		    cmp eax, MAX_DRUMS
 00000120  74 05		    je queue_full
 00000122  B8 00000000		    mov eax, 0

 00000127			queue_full:
 00000127  B8 00000001		    mov eax, 1

 0000012C  C3			    ret
 0000012D			isQueueFull ENDP

 0000012D			isQueueEmpty PROC
 0000012D  A1 00000DDE R	    mov eax, qsize
 00000132  83 F8 00		    cmp eax, 0
 00000135  74 05		    je queue_empty
 00000137  B8 00000000		    mov eax, 0

 0000013C			queue_empty:
 0000013C  B8 00000001		    mov eax, 1

 00000141  C3			    ret
 00000142			isQueueEmpty ENDP

 00000142			enqueue PROC
 00000142  E8 FFFFFFD1		    call isQueueFull
 00000147  83 F8 01		    cmp eax, 1
 0000014A  74 44		    je end_enqueue
				    
 0000014C  A1 00000DCE R	    mov eax, [current_drum.sprite]      ; sprite
 00000151  8B 1D 00000DD2 R	    mov ebx, [current_drum.dtype]       ; dtype
 00000157  8D 3D 00000132 R	    lea edi, drumQueue

				    ; 計算擺放位置
 0000015D  A1 00000DDA R	    mov eax, [rear]        
 00000162  BA 00000008		    mov edx, Drum_struct_size
 00000167  F7 E2		    mul edx                  
 00000169  03 F8		    add edi, eax 

				    ; 儲存drum資料
 0000016B  89 07		    mov [edi], eax           ; sprite
 0000016D  89 5F 04		    mov [edi + 4], ebx       ; dtype

				    ; 更新rear、size
 00000170  FF 05 00000DDA R	    inc dword ptr [rear]
 00000176  A1 00000DDA R	    mov eax, [rear]
 0000017B  33 D2		    xor edx, edx
 0000017D  B9 00000064		    mov ecx, MAX_DRUMS
 00000182  F7 F1		    div ecx
 00000184  89 15 00000DDA R	    mov dword ptr [rear], edx
 0000018A  FF 05 00000DDE R	    inc dword ptr [qsize]

 00000190			end_enqueue:
 00000190  C3			    ret
 00000191			enqueue ENDP

 00000191			dequeue PROC
 00000191  E8 FFFFFF97		    call isQueueEmpty
 00000196  83 F8 01		    cmp eax, 1
 00000199  74 42		    je end_dequeue

				    ; 計算移除位置
 0000019B  8D 3D 00000132 R	    lea edi, drumQueue
 000001A1  A1 00000DD6 R	    mov eax, [front]
 000001A6  BA 00000008		    mov edx, Drum_struct_size
 000001AB  F7 E2		    mul edx
 000001AD  03 F8		    add edi, eax

				    ; 讀取 drum
 000001AF  8B 07		    mov eax, [edi]           ;sprite
 000001B1  8B 5F 04		    mov ebx, [edi + 4]       ;dtype

				    ;釋放資源
 000001B4  50			    push eax
 000001B5  E8 00000000 E	    call sfSprite_destroy
 000001BA  83 C4 04		    add esp, 4

				    ; 更新front、size
 000001BD  FF 05 00000DD6 R	    inc dword ptr [front]
 000001C3  A1 00000DD6 R	    mov eax, [front]
 000001C8  33 D2		    xor edx, edx
 000001CA  B9 00000064		    mov ecx, MAX_DRUMS
 000001CF  F7 F1		    div ecx
 000001D1  89 15 00000DD6 R	    mov dword ptr [front], edx
 000001D7  FF 0D 00000DDE R	    dec dword ptr [qsize]

 000001DD			end_dequeue:
 000001DD  C3			    ret
 000001DE			dequeue ENDP

 000001DE			spawnDrum PROC             ;call前type要先push到eax
 000001DE  E8 FFFFFF35		    call isQueueFull
 000001E3  83 F8 01		    cmp eax, 1
 000001E6  74 3C		    je end_spawn

 000001E8  A3 00000DD2 R	    mov dword ptr [current_drum.dtype], eax
 000001ED  E8 00000000 E	    call sfSprite_create
 000001F2  A3 00000DCE R	    mov DWORD PTR [current_drum.sprite], eax

 000001F7  83 3D 00000DD2 R	    cmp dword ptr [current_drum.dtype], 1
	   01
 000001FE  74 05		    je spawnRed
 00000200  E8 FFFFFEF4		    call @load_blue_texture

 00000205			spawnRed:
 00000205  E8 FFFFFED0		    call @load_red_texture

				    ;設定位置
 0000020A  FF 35 0000AA5E R	    push dword ptr [initialPosition+4] ; Y 座標
 00000210  FF 35 0000AA5A R	    push dword ptr [initialPosition]   ; X 座標
 00000216  50			    push eax
 00000217  E8 00000000 E	    call sfSprite_setPosition
 0000021C  83 C4 0C		    add esp, 12

 0000021F  E8 FFFFFF1E		    call enqueue

 00000224			end_spawn:
 00000224  C3			    ret
 00000225			spawnDrum ENDP

 00000225			updateDrums PROC
 00000225  83 3D 00000DDE R	    cmp qsize, 0
	   00
 0000022C  0F 86 000000A7	    jbe end_update
				    
 00000232  8D 3D 00000132 R	    lea edi, drumQueue
 00000238  A1 00000DD6 R	    mov eax, [front]
 0000023D  BA 00000008		    mov edx, Drum_struct_size
 00000242  F7 E2		    mul edx
 00000244  03 F8		    add edi, eax

				    ; 讀取 drum
 00000246  8B 07		    mov eax, [edi]           ;sprite
 00000248  8B 5F 04		    mov ebx, [edi + 4]       ;dtype

 0000024B  50			    push eax
 0000024C  E8 00000000 E	    call sfSprite_getPosition
 00000251  83 C4 08		    add esp, 8

 00000254  F3/ 0F 11 05		    movss [spritePosX], xmm0
	   00000102 R
 0000025C  83 05 00000102 R	    add [spritePosX], 50
	   32
 00000263  83 3D 00000102 R	    cmp [spritePosX], 50
	   32
 0000026A  73 6D		    jae end_update

 0000026C  E8 FFFFFF20		    call dequeue

 00000271  8B 0D 00000DDE R	    mov ecx, qsize
 00000277  8B 1D 00000DD6 R	    mov ebx, front
 0000027D			update_queue:
				    ; 讀取 drum
 0000027D  8B 07		    mov eax, [edi]           ;sprite

 0000027F  50			    push eax
 00000280  E8 00000000 E	    call sfSprite_getPosition
 00000285  83 C4 08		    add esp, 8
				    
 00000288  F3/ 0F 11 05		    movss [spritePosX], xmm0
	   00000102 R
 00000290  F3/ 0F 11 0D		    movss [spritePosY], xmm1
	   00000106 R
 00000298  F3/ 0F 10 05		    movss xmm0, [spritePosX]
	   00000102 R
 000002A0  F3/ 0F 10 0D		    movss xmm1, [DRUM_SPEED]
	   000000EE R
 000002A8  F3/ 0F 5C C1		    subss xmm0, xmm1
 000002AC  F3/ 0F 11 05		    movss [spritePosX], xmm0
	   00000102 R

 000002B4  FF 35 00000106 R	    push dword ptr [spritePosY] ; Y 座標
 000002BA  FF 35 00000102 R	    push dword ptr [spritePosX]   ; X 座標
 000002C0  50			    push eax
 000002C1  E8 00000000 E	    call sfSprite_setPosition
 000002C6  83 C4 0C		    add esp, 12

 000002C9  43			    inc ebx
 000002CA  8B C3		    mov eax, ebx
 000002CC  33 D2		    xor edx, edx
 000002CE  B9 00000064		    mov ecx, MAX_DRUMS
 000002D3  F7 F1		    div ecx
 000002D5  8B DA		    mov ebx, edx

 000002D7  E2 A4		loop update_queue

 000002D9			end_update:
 000002D9  C3			    ret
 000002DA			updateDrums ENDP

 000002DA			main_game_page PROC window:DWORD

				    ; 載入背景
 000002DD  E8 FFFFFD5E		    call @load_bg
 000002E2  85 C0		    test eax, eax
 000002E4  0F 84 000000F9	    jz @exit_program

				    ; 載入紅鼓紋理
 000002EA  E8 FFFFFDEB		    call @load_red_texture
 000002EF  85 C0		    test eax, eax
 000002F1  0F 84 000000EC	    jz @exit_program

				    ; 載入藍鼓紋理
 000002F7  E8 FFFFFDFD		    call @load_blue_texture
 000002FC  85 C0		    test eax, eax
 000002FE  0F 84 000000DF	    jz @exit_program

				    ;載入音樂
 00000304  E8 FFFFFCF7		    call game_play_music
 00000309  85 C0		    test eax, eax
 0000030B  0F 84 000000D2	    jz @exit_program

				    ;載入鼓面
 00000311  E8 FFFFFD6E		    call parseNoteChart
 00000316  85 C0		    test eax, eax
 00000318  0F 84 000000C5	    jz @exit_program

				    ; 載入tja檔
				    ;push offset selected_beatmap_path
				    ;call parseNoteChart
				    ;test eax, eax
				    ;jz @exit_program

				    ; 初始化計時器
 0000031E  E8 00000000 E	    call sfClock_create
 00000323  85 C0		    test eax, eax
 00000325  0F 84 000000B8	    jz @exit_program
 0000032B  A3 00000DE2 R	    mov clock, eax

 00000330			@main_loop:

				    ; 檢查音樂是否停止
 00000330  FF 35 00000DB2 R	    push bgMusic
 00000336  E8 00000000 E	    call sfMusic_getStatus
 0000033B  83 C4 04		    add esp, 4
 0000033E  83 F8 00		    cmp eax, 0
 00000341  74 71		    je to_end_page

				    ; 檢查視窗是否開啟
 00000343  8B 45 08		    mov eax, window
 00000346  50			    push eax
 00000347  E8 00000000 E	    call sfRenderWindow_isOpen
 0000034C  83 C4 04		    add esp, 4
 0000034F  85 C0		    test eax, eax
 00000351  0F 84 0000008C	    je @exit_program

				    ; 更新計時器
 00000357  A1 00000DE2 R	    mov eax, clock
 0000035C  50			    push eax
 0000035D  E8 00000000 E	    call sfClock_getElapsedTime
 00000362  83 C4 04		    add esp, 4
 00000365  85 C0		    test eax, eax
 00000367  74 7A		    jz @exit_program               ; 如果時間返回無效，退出程式

				    ; 提取微秒並轉換為秒數
 00000369  BB 000003E8		    mov ebx, 1000  ; 1,000,000 用於將微秒轉換為秒
 0000036E  33 D2		    xor edx, edx      ; 清除 edx，準備進行除法操作
 00000370  F7 F3		    div ebx           ; eax = microseconds / 1,000,000 (秒數)
 00000372  F3/ 0F 2A C0		    cvtsi2ss xmm0, eax
				    ;movss note_timer, xmm0  ; 將秒數存儲到 note_timer
 00000376  3B 05 00000DEE R	    cmp eax, noteSpawnInterval
 0000037C  72 00		    jb update


 0000037E			update:
				    ; 清除視窗
 0000037E  FF 35 0000AA56 R	    push blackColor
 00000384  FF 75 08		    push window
 00000387  E8 00000000 E	    call sfRenderWindow_clear
 0000038C  83 C4 08		    add esp, 8

				    ; 繪製背景
 0000038F  6A 00		    push 0
 00000391  A1 00000126 R	    mov eax, bgSprite
 00000396  50			    push eax
 00000397  8B 4D 08		    mov ecx, window
 0000039A  51			    push ecx
 0000039B  E8 00000000 E	    call sfRenderWindow_drawSprite
 000003A0  83 C4 0C		    add esp, 12



				    ; 顯示視窗
 000003A3  8B 45 08		    mov eax, window
 000003A6  50			    push eax
 000003A7  E8 00000000 E	    call sfRenderWindow_display
 000003AC  83 C4 04		    add esp, 4

 000003AF  E9 FFFFFF7C		    jmp @main_loop

				; 跳轉結算畫面
 000003B4			to_end_page:
				    ;遊戲結束要切換到結尾畫面
 000003B4  FF 35 0000011E R	    push score    
 000003BA  FF 35 0000011A R	    push miss_count    
 000003C0  FF 35 00000116 R	    push good_count   
 000003C6  FF 35 00000112 R	    push great_count    
 000003CC  FF 75 08		    push window        
 000003CF  E8 00000000 E	    call end_game_page
 000003D4  83 C4 14		    add esp, 20
 000003D7  C7 05 00000000 E	    mov DWORD PTR [currentPage], 2
	   00000002
 000003E1  EB 00		    jmp @exit_program

 000003E3			@exit_program:
				    ;call @cleanup_notes

 000003E3  FF 35 00000126 R	    push bgSprite
 000003E9  E8 00000000 E	    call sfSprite_destroy
 000003EE  83 C4 04		    add esp, 4

 000003F1  FF 35 00000122 R	    push bgTexture
 000003F7  E8 00000000 E	    call sfTexture_destroy
 000003FC  83 C4 04		    add esp, 4

 000003FF  FF 35 0000012A R	    push redDrumTexture
 00000405  E8 00000000 E	    call sfTexture_destroy
 0000040A  83 C4 04		    add esp, 4

 0000040D  FF 35 0000012E R	    push blueDrumTexture
 00000413  E8 00000000 E	    call sfTexture_destroy
 00000418  83 C4 04		    add esp, 4

 0000041B  FF 35 00000DE2 R	    push clock
 00000421  E8 00000000 E	    call sfClock_destroy
 00000426  83 C4 04		    add esp, 4

				    ;push dword ptr [track_shape]
				    ;call sfRectangleShape_destroy
				    ;add esp, 4

				    ret
 0000042B			main_game_page ENDP

				END main_game_page
Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/20/24 03:18:58
main_game_page.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

Button . . . . . . . . . . . . .	 00000008
  shape  . . . . . . . . . . . .	 00000000	 DWord
  state  . . . . . . . . . . . .	 00000004	 DWord
Drum . . . . . . . . . . . . . .	 00000008
  sprite . . . . . . . . . . . .	 00000000	 DWord
  dtype  . . . . . . . . . . . .	 00000004	 DWord
key  . . . . . . . . . . . . . .	 00000014
  code . . . . . . . . . . . . .	 00000000	 DWord
  alt  . . . . . . . . . . . . .	 00000004	 DWord
  control  . . . . . . . . . . .	 00000008	 DWord
  shift  . . . . . . . . . . . .	 0000000C	 DWord
  system . . . . . . . . . . . .	 00000010	 DWord
mouseButton  . . . . . . . . . .	 0000000C
  button . . . . . . . . . . . .	 00000000	 DWord
  x  . . . . . . . . . . . . . .	 00000004	 DWord
  y  . . . . . . . . . . . . . .	 00000008	 DWord
sfColor  . . . . . . . . . . . .	 00000004
  r  . . . . . . . . . . . . . .	 00000000	 Byte
  g  . . . . . . . . . . . . . .	 00000001	 Byte
  b  . . . . . . . . . . . . . .	 00000002	 Byte
  a  . . . . . . . . . . . . . .	 00000003	 Byte
sfEvent  . . . . . . . . . . . .	 00000030
  _type  . . . . . . . . . . . .	 00000000	 DWord
  _size  . . . . . . . . . . . .	 00000004	 DWord
  mouse  . . . . . . . . . . . .	 00000008	 
  _key . . . . . . . . . . . . .	 00000014	 
  mouseMove  . . . . . . . . . .	 00000028	 QWord
sfFloatRect  . . . . . . . . . .	 00000010
  left . . . . . . . . . . . . .	 00000000	 DWord
  top  . . . . . . . . . . . . .	 00000004	 DWord
  _width . . . . . . . . . . . .	 00000008	 DWord
  height . . . . . . . . . . . .	 0000000C	 DWord
sfTime . . . . . . . . . . . . .	 00000004
  microseconds . . . . . . . . .	 00000000	 DWord
sfVector2f . . . . . . . . . . .	 00000008
  x  . . . . . . . . . . . . . .	 00000000	 DWord
  y  . . . . . . . . . . . . . .	 00000004	 DWord
sfVector2i . . . . . . . . . . .	 00000008
  x  . . . . . . . . . . . . . .	 00000000	 DWord
  y  . . . . . . . . . . . . . .	 00000004	 DWord
sfVideoMode  . . . . . . . . . .	 0000000C
  _width . . . . . . . . . . . .	 00000000	 DWord
  height . . . . . . . . . . . .	 00000004	 DWord
  bpp  . . . . . . . . . . . . .	 00000008	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 0000AEA4 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000042B Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

@load_bg . . . . . . . . . . . .	P Near	 00000040 _TEXT	Length= 00000044 Public C
  @fail_load . . . . . . . . . .	L Near	 0000007E _TEXT	
@load_blue_texture . . . . . . .	P Near	 000000F9 _TEXT	Length= 0000001F Public C
  @fail_load . . . . . . . . . .	L Near	 00000112 _TEXT	
@load_red_texture  . . . . . . .	P Near	 000000DA _TEXT	Length= 0000001F Public C
  @fail_load . . . . . . . . . .	L Near	 000000F3 _TEXT	
dequeue  . . . . . . . . . . . .	P Near	 00000191 _TEXT	Length= 0000004D Public C
  end_dequeue  . . . . . . . . .	L Near	 000001DD _TEXT	
enqueue  . . . . . . . . . . . .	P Near	 00000142 _TEXT	Length= 0000004F Public C
  end_enqueue  . . . . . . . . .	L Near	 00000190 _TEXT	
game_play_music  . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001C Public C
isQueueEmpty . . . . . . . . . .	P Near	 0000012D _TEXT	Length= 00000015 Public C
  queue_empty  . . . . . . . . .	L Near	 0000013C _TEXT	
isQueueFull  . . . . . . . . . .	P Near	 00000118 _TEXT	Length= 00000015 Public C
  queue_full . . . . . . . . . .	L Near	 00000127 _TEXT	
main_game_page . . . . . . . . .	P Near	 000002DA _TEXT	Length= 00000151 Public C
  window . . . . . . . . . . . .	DWord	 bp + 00000008
  @main_loop . . . . . . . . . .	L Near	 00000330 _TEXT	
  update . . . . . . . . . . . .	L Near	 0000037E _TEXT	
  to_end_page  . . . . . . . . .	L Near	 000003B4 _TEXT	
  @exit_program  . . . . . . . .	L Near	 000003E3 _TEXT	
parseNoteChart . . . . . . . . .	P Near	 00000084 _TEXT	Length= 00000056 Public C
  start  . . . . . . . . . . . .	L Near	 00000084 _TEXT	
  parse_loop . . . . . . . . . .	L Near	 00000092 _TEXT	
  skip_char  . . . . . . . . . .	L Near	 000000A8 _TEXT	
  next_char  . . . . . . . . . .	L Near	 000000AC _TEXT	
  parse_end  . . . . . . . . . .	L Near	 000000AF _TEXT	
readFile . . . . . . . . . . . .	P Near	 0000001C _TEXT	Length= 00000024 Public C
spawnDrum  . . . . . . . . . . .	P Near	 000001DE _TEXT	Length= 00000047 Public C
  spawnRed . . . . . . . . . . .	L Near	 00000205 _TEXT	
  end_spawn  . . . . . . . . . .	L Near	 00000224 _TEXT	
updateDrums  . . . . . . . . . .	P Near	 00000225 _TEXT	Length= 000000B5 Public C
  update_queue . . . . . . . . .	L Near	 0000027D _TEXT	
  end_update . . . . . . . . . .	L Near	 000002D9 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000001h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
BUTTON_STATE_NORMAL  . . . . . .	Number	 00000000h   
BUTTON_STATE_PRESSED . . . . . .	Number	 00000001h   
CloseHandle@4  . . . . . . . . .	L Near	 00000000 FLAT	External C
CreateFileA@28 . . . . . . . . .	L Near	 00000000 FLAT	External C
DRUM_SPEED . . . . . . . . . . .	DWord	 000000EE _DATA	
Drum_struct_size . . . . . . . .	Number	 00000008h   
ExitProcess@4  . . . . . . . . .	L Near	 00000000 FLAT	External C
FILE_ATTRIBUTE_NORMAL  . . . . .	Text   	 80h
FILE_SHARE_READ  . . . . . . . .	Text   	 0x00000001
GENERIC_READ . . . . . . . . . .	Text   	 80000000h
GetLastError@0 . . . . . . . . .	L Near	 00000000 FLAT	External C
GetStdHandle@4 . . . . . . . . .	L Near	 00000000 FLAT	External C
MAX_DRUMS  . . . . . . . . . . .	Number	 00000064h   
MAX_LINE_LENGTH  . . . . . . . .	Number	 000003E8h   
MAX_NOTES  . . . . . . . . . . .	Number	 00002710h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
ReadFile@20  . . . . . . . . . .	L Near	 00000000 FLAT	External C
SCREEN_HEIGHT  . . . . . . . . .	Number	 000002D0h   
SCREEN_WIDTH . . . . . . . . . .	Text   	 1280.0
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
WriteConsoleA@20 . . . . . . . .	L Near	 00000000 FLAT	External C
WriteFile@20 . . . . . . . . . .	L Near	 00000000 FLAT	External C
bgSprite . . . . . . . . . . . .	DWord	 00000126 _DATA	
bgTexture  . . . . . . . . . . .	DWord	 00000122 _DATA	
bg_path  . . . . . . . . . . . .	Byte	 00000000 _DATA	
bgmusic  . . . . . . . . . . . .	DWord	 00000DB2 _DATA	
blackColor . . . . . . . . . . .	sfColor	 0000AA56 _DATA	
blueDrumTexture  . . . . . . . .	DWord	 0000012E _DATA	
blue_drum_path . . . . . . . . .	Byte	 00000039 _DATA	
bpm  . . . . . . . . . . . . . .	DWord	 00000DEA _DATA	
bytesRead  . . . . . . . . . . .	DWord	 0000AA7C _DATA	
clock  . . . . . . . . . . . . .	DWord	 00000DE2 _DATA	
constant . . . . . . . . . . . .	DWord	 0000010A _DATA	
create_button  . . . . . . . . .	L Near	 00000000 FLAT	External C
currentPage  . . . . . . . . . .	DWord	 00000000 FLAT	External C
current_drum . . . . . . . . . .	Drum	 00000DCE _DATA	
drumQueue  . . . . . . . . . . .	DWord	 00000132 _DATA	
end_game_page  . . . . . . . . .	L Near	 00000000 FLAT	External C
filename . . . . . . . . . . . .	Byte	 0000AA66 _DATA	
four . . . . . . . . . . . . . .	DWord	 0000010E _DATA	
front  . . . . . . . . . . . . .	DWord	 00000DD6 _DATA	
good_count . . . . . . . . . . .	DWord	 00000116 _DATA	
great_count  . . . . . . . . . .	DWord	 00000112 _DATA	
hFile  . . . . . . . . . . . . .	DWord	 0000AA78 _DATA	
initialPosition  . . . . . . . .	sfVector2f  0000AA5A _DATA	
inputString  . . . . . . . . . .	Byte	 000000AA _DATA	
miss_count . . . . . . . . . . .	DWord	 0000011A _DATA	
msgReadFail  . . . . . . . . . .	Byte	 0000AE80 _DATA	
msgReadSuccess . . . . . . . . .	Byte	 0000AE94 _DATA	
noteSpawnInterval  . . . . . . .	DWord	 00000DEE _DATA	
note_timer . . . . . . . . . . .	DWord	 00000DE6 _DATA	
notes  . . . . . . . . . . . . .	DWord	 00000DF2 _DATA	
qsize  . . . . . . . . . . . . .	DWord	 00000DDE _DATA	
readBuffer . . . . . . . . . . .	Byte	 0000AA80 _DATA	
rear . . . . . . . . . . . . . .	DWord	 00000DDA _DATA	
redDrumTexture . . . . . . . . .	DWord	 0000012A _DATA	
red_drum_path  . . . . . . . . .	Byte	 00000020 _DATA	
score  . . . . . . . . . . . . .	DWord	 0000011E _DATA	
selected_beatmap_path  . . . . .	Byte	 0000008B _DATA	
selected_music_path  . . . . . .	Byte	 00000053 _DATA	
sfClock_create . . . . . . . . .	L Near	 00000000 FLAT	External C
sfClock_destroy  . . . . . . . .	L Near	 00000000 FLAT	External C
sfClock_getElapsedTime . . . . .	L Near	 00000000 FLAT	External C
sfClock_restart  . . . . . . . .	L Near	 00000000 FLAT	External C
sfClose  . . . . . . . . . . . .	Number	 00000004h   
sfColor_fromRGBA . . . . . . . .	L Near	 00000000 FLAT	External C
sfColor_fromRGB  . . . . . . . .	L Near	 00000000 FLAT	External C
sfEvtClosed  . . . . . . . . . .	Number	 00000000h   
sfEvtGainedFocus . . . . . . . .	Number	 00000003h   
sfEvtKeyPressed  . . . . . . . .	Number	 00000005h   
sfEvtKeyReleased . . . . . . . .	Number	 00000006h   
sfEvtLostFocus . . . . . . . . .	Number	 00000002h   
sfEvtMouseButtonPressed  . . . .	Number	 00000009h   
sfEvtMouseButtonReleased . . . .	Number	 0000000Ah   
sfEvtMouseEntered  . . . . . . .	Number	 0000000Ch   
sfEvtMouseLeft . . . . . . . . .	Number	 0000000Dh   
sfEvtMouseMoved  . . . . . . . .	Number	 0000000Bh   
sfEvtMouseWheelMoved . . . . . .	Number	 00000007h   
sfEvtMouseWheelScrolled  . . . .	Number	 00000008h   
sfEvtResized . . . . . . . . . .	Number	 00000001h   
sfEvtTextEntered . . . . . . . .	Number	 00000004h   
sfFalse  . . . . . . . . . . . .	Number	 00000000h   
sfFont_createFromFile  . . . . .	L Near	 00000000 FLAT	External C
sfFont_destroy . . . . . . . . .	L Near	 00000000 FLAT	External C
sfFullscreen . . . . . . . . . .	Number	 00000008h   
sfKeyA . . . . . . . . . . . . .	Number	 00000000h   
sfKeyD . . . . . . . . . . . . .	Number	 00000003h   
sfKeyEnter . . . . . . . . . . .	Number	 0000003Ah   
sfKeyEscape  . . . . . . . . . .	Number	 00000024h   
sfKeyS . . . . . . . . . . . . .	Number	 00000012h   
sfMouseLeft  . . . . . . . . . .	Number	 00000000h   
sfMouseMiddle  . . . . . . . . .	Number	 00000002h   
sfMouseRight . . . . . . . . . .	Number	 00000001h   
sfMusic_createFromFile . . . . .	L Near	 00000000 FLAT	External C
sfMusic_destroy  . . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_getStatus  . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_play . . . . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_setLoop  . . . . . . . .	L Near	 00000000 FLAT	External C
sfMusic_stop . . . . . . . . . .	L Near	 00000000 FLAT	External C
sfNone . . . . . . . . . . . . .	Number	 00000000h   
sfRectangleShape_create  . . . .	L Near	 00000000 FLAT	External C
sfRectangleShape_destroy . . . .	L Near	 00000000 FLAT	External C
sfRectangleShape_setFillColor  .	L Near	 00000000 FLAT	External C
sfRectangleShape_setOutlineColor .	L Near	 00000000 FLAT	External C
sfRectangleShape_setOutlineThickness .	L Near	 00000000 FLAT	External C
sfRectangleShape_setPosition . .	L Near	 00000000 FLAT	External C
sfRectangleShape_setSize . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_clear . . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_close . . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_create  . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_destroy . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_display . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_drawRectangleShape 	L Near	 00000000 FLAT	External C
sfRenderWindow_drawSprite  . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_drawText  . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_isOpen  . . . . .	L Near	 00000000 FLAT	External C
sfRenderWindow_pollEvent . . . .	L Near	 00000000 FLAT	External C
sfResize . . . . . . . . . . . .	Number	 00000002h   
sfSleep  . . . . . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_create  . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_destroy . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_getPosition . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_move  . . . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_setOrigin . . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_setPosition . . . . . .	L Near	 00000000 FLAT	External C
sfSprite_setTexture  . . . . . .	L Near	 00000000 FLAT	External C
sfText_create  . . . . . . . . .	L Near	 00000000 FLAT	External C
sfText_destroy . . . . . . . . .	L Near	 00000000 FLAT	External C
sfText_getGlobalBounds . . . . .	L Near	 00000000 FLAT	External C
sfText_getLocalBounds  . . . . .	L Near	 00000000 FLAT	External C
sfText_setCharacterSize  . . . .	L Near	 00000000 FLAT	External C
sfText_setFillColor  . . . . . .	L Near	 00000000 FLAT	External C
sfText_setFont . . . . . . . . .	L Near	 00000000 FLAT	External C
sfText_setOutlineColor . . . . .	L Near	 00000000 FLAT	External C
sfText_setOutlineThickness . . .	L Near	 00000000 FLAT	External C
sfText_setPosition . . . . . . .	L Near	 00000000 FLAT	External C
sfText_setString . . . . . . . .	L Near	 00000000 FLAT	External C
sfTexture_createFromFile . . . .	L Near	 00000000 FLAT	External C
sfTexture_destroy  . . . . . . .	L Near	 00000000 FLAT	External C
sfTitlebar . . . . . . . . . . .	Number	 00000001h   
sfTrue . . . . . . . . . . . . .	Number	 00000001h   
spritePosX . . . . . . . . . . .	DWord	 00000102 _DATA	
spritePosY . . . . . . . . . . .	DWord	 00000106 _DATA	
stdout_handle  . . . . . . . . .	DWord	 0000AA62 _DATA	
totalNotes . . . . . . . . . . .	DWord	 0000AA32 _DATA	
trackBounds  . . . . . . . . . .	sfFloatRect  00000DB6 _DATA	
track_height . . . . . . . . . .	DWord	 000000F2 _DATA	
track_shape  . . . . . . . . . .	Button	 00000DC6 _DATA	
track_width  . . . . . . . . . .	DWord	 000000F6 _DATA	
track_x  . . . . . . . . . . . .	DWord	 000000FA _DATA	
track_y  . . . . . . . . . . . .	DWord	 000000FE _DATA	
whiteColor . . . . . . . . . . .	sfColor	 0000AA52 _DATA	
windowTitle  . . . . . . . . . .	Byte	 0000AA42 _DATA	
window_videoMode . . . . . . . .	sfVideoMode  0000AA36 _DATA	

	   0 Warnings
	   0 Errors
